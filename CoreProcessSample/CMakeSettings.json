{
    "configurations": [
        {
            "name": "Windows-x64-TWDebug",
            "generator": "Ninja",
            "configurationType": "Debug",
            "inheritEnvironments": [ "clang_cl_x64" ],
            "cmakeCommandArgs": "",
            "buildCommandArgs": "",
            "ctestCommandArgs": "",
            "variables": [
                {
                    "name": "CMAKE_CXX_COMPILER",
                    "value": "${env.LLVMInstallDir}/bin/clang-cl.exe",
                    "type": "FILEPATH"
                },
                {
                    "name": "CMAKE_AR",
                    "value": "${env.LLVMInstallDir}/bin/clang-lib.exe",
                    "type": "FILEPATH"
                },
                {
                    "name": "CMAKE_LINKER",
                    "value": "${env.LLVMInstallDir}/bin/lld-link.exe",
                    "type": "FILEPATH"
                },
                {
                    "name": "TW_BUILD_OS",
                    "value": "Windows",
                    "type": "STRING"
                },
                {
                    "name": "TW_BUILD_CONFIG",
                    "value": "TWDebug",
                    "type": "STRING"
                },
                {
                    "name": "TW_BUILD_ARCH",
                    "value": "x64",
                    "type": "STRING"
                },
                {
                    "name": "TW_IS_TEST",
                    "value": "False",
                    "type": "STRING"
                },
                {
                    "name": "TW_TEST_FRAMEWORK",
                    "value": "",
                    "type": "STRING"
                }
            ],
            "clangTidyChecks": "-*, bugprone-bad-signal-to-kill-thread, bugprone-bool-pointer-implicit-conversion, bugprone-branch-clone, bugprone-copy-constructor-init, bugprone-dangling-handle, bugprone-dynamic-static-initializers, bugprone-exception-escape, bugprone-forward-declaration-namespace, bugprone-forwarding-reference-overload, bugprone-incorrect-roundings, bugprone-infinite-loop, bugprone-integer-division, bugprone-macro-parentheses, bugprone-macro-repeated-side-effects, bugprone-misplaced-operator-in-strlen-in-alloc, bugprone-misplaced-pointer-arithmetic-in-alloc, bugprone-misplaced-widening-cast, bugprone-move-forwarding-reference, bugprone-multiple-statement-macro, bugprone-not-null-terminated-result, bugprone-parent-virtual-call, bugprone-posix-return, bugprone-reserved-identifier, bugprone-signed-char-misuse, bugprone-sizeof-expression, bugprone-spuriously-wake-up-functions (cert-con36-c), bugprone-string-literal-with-embedded-nul, bugprone-suspicious-enum-usage, bugprone-suspicious-include, bugprone-suspicious-memset-usage, bugprone-suspicious-missing-comma, bugprone-suspicious-semicolon, bugprone-suspicious-string-compare, bugprone-swapped-arguments, bugprone-terminating-continue, bugprone-too-small-loop-variable, bugprone-undefined-memory-manipulation, bugprone-undelegated-constructor, bugprone-unhandled-self-assignment (cert-oop54-cpp), bugprone-unused-raii, bugprone-use-after-move, cert-dcl21-cpp, cert-dcl50-cpp, cert-err34-c, cert-err58-cpp, cert-flp30-c, cert-mem57-cpp, cert-msc50-cpp, cert-msc51-cpp, cert-oop57-cpp, cert-oop58-cpp, clang-analyzer-core.DivideZero, clang-analyzer-core.NonNullParamChecker, clang-analyzer-core.NullDereference, clang-analyzer-core.StackAddressEscape, clang-analyzer-core.UndefinedBinaryOperatorResult, clang-analyzer-core.VLASize, clang-analyzer-core.uninitialized.ArraySubscript, clang-analyzer-core.uninitialized.Assign, clang-analyzer-core.uninitialized.Branch, clang-analyzer-core.uninitialized.CapturedBlockVariable, clang-analyzer-core.uninitialized.UndefReturn, clang-analyzer-cplusplus.InnerPointer, clang-analyzer-cplusplus.NewDelete, clang-analyzer-cplusplus.NewDeleteLeaks, clang-analyzer-deadcode.DeadStores, clang-analyzer-optin.performance.Padding, clang-analyzer-optin.portability.UnixAPI, clang-analyzer-valist.CopyToSelf, clang-analyzer-valist.Uninitialized, clang-analyzer-valist.Unterminated, clang-analyzer-security.FloatLoopCounter, clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling, clang-analyzer-core.CallAndMessage, clang-analyzer-optin.cplusplus.UninitializedObject, clang-analyzer-optin.cplusplus.VirtualCall, clang-analyzer-security.insecureAPI.UncheckedReturn, clang-analyzer-security.insecureAPI.bcmp, clang-analyzer-security.insecureAPI.bcopy, clang-analyzer-security.insecureAPI.bzero, clang-analyzer-security.insecureAPI.getpw, clang-analyzer-security.insecureAPI.gets, clang-analyzer-security.insecureAPI.mkstemp, clang-analyzer-security.insecureAPI.mktemp, clang-analyzer-security.insecureAPI.rand, clang-analyzer-security.insecureAPI.strcpy, clang-analyzer-security.insecureAPI.vfork, clang-analyzer-unix.API, clang-analyzer-unix.Malloc, clang-analyzer-unix.MallocSizeof, clang-analyzer-unix.MismatchedDeallocator, clang-analyzer-unix.Vfork, clang-analyzer-unix.cstring.BadSizeArg, clang-analyzer-unix.cstring.NullArg, cppcoreguidelines-avoid-non-const-global-variables, cppcoreguidelines-avoid-goto, cppcoreguidelines-interfaces-global-init, cppcoreguidelines-macro-usage, cppcoreguidelines-narrowing-conversions, cppcoreguidelines-no-malloc, cppcoreguidelines-pro-type-const-cast, cppcoreguidelines-pro-type-member-init, cppcoreguidelines-pro-type-reinterpret-cast, cppcoreguidelines-pro-type-static-cast-downcast, cppcoreguidelines-pro-type-vararg, cppcoreguidelines-slicing, cppcoreguidelines-special-member-functions, fuchsia-statically-constructed-objects, google-default-arguments, google-explicit-constructor, google-runtime-int, google-runtime-operator, google-upgrade-googletest-case, hicpp-avoid-goto, hicpp-multiway-paths-covered, hicpp-signed-bitwise, llvm-header-guard, misc-definitions-in-headers, misc-misplaced-const, misc-new-delete-overloads, misc-non-copyable-objects, misc-no-recursion, misc-redundant-expression, misc-static-assert, misc-unconventional-assign-operator, misc-unused-alias-decls, misc-unused-parameters, misc-unused-using-decls, modernize-deprecated-headers, modernize-pass-by-value, modernize-raw-string-literal, modernize-redundant-void-arg, modernize-return-braced-init-list, modernize-unary-static-assert, modernize-use-bool-literals, modernize-use-default-member-init, modernize-use-equals-default, modernize-use-equals-delete, modernize-use-noexcept, modernize-use-nullptr, modernize-use-override, performance-implicit-conversion-in-loop, performance-move-const-arg, performance-move-constructor-init, performance-no-automatic-move, performance-noexcept-move-constructor, performance-trivially-destructible, performance-unnecessary-copy-initialization, performance-unnecessary-value-param, readability-it-bool-conversion, readability-avoid-const-params-in-decls, readability-const-return-type, readability-convert-member-functions-to-static, readability-deleted-default, readability-delete-null-pointer, readability-else-after-return, readability-function-size, readability-inconsistent-declaration-parameter-name, readability-isolate-declaration, readability-make-member-function-const, readability-misplaced-array-index, readability-named-parameter, readability-non-const-parameter, readability-qualified-auto, readability-redundant-access-specifiers, readability-redundant-control-flow, readability-redundant-declaration, readability-redundant-function-ptr-dereference, readability-redundant-member-init, readability-redundant-preprocessor, readability-simplify-boolean-expr, readability-simplify-subscript-expr, readability-static-accessed-through-instance, readability-static-definition-in-anonymous-namespace",
            "buildRoot": "${env.TWWorkspaceHome}/TWBuilds/TWInt/CoreProcessSample/Windows-x64-TWDebug",
            "installRoot": "${env.TWWorkspaceHome}/TWBuilds/TWInt/CoreProcessSample/Windows-x64-TWDebug/install"
        },
        {
            "name": "Windows-x64-TWMetricsOnly",
            "generator": "Ninja",
            "configurationType": "Debug",
            "inheritEnvironments": [ "clang_cl_x64" ],
            "cmakeCommandArgs": "",
            "buildCommandArgs": "",
            "ctestCommandArgs": "",
            "variables": [
                {
                    "name": "CMAKE_CXX_COMPILER",
                    "value": "${env.LLVMInstallDir}/bin/clang-cl.exe",
                    "type": "FILEPATH"
                },
                {
                    "name": "CMAKE_AR",
                    "value": "${env.LLVMInstallDir}/bin/clang-lib.exe",
                    "type": "FILEPATH"
                },
                {
                    "name": "CMAKE_LINKER",
                    "value": "${env.LLVMInstallDir}/bin/lld-link.exe",
                    "type": "FILEPATH"
                },
                {
                    "name": "TW_BUILD_OS",
                    "value": "Windows",
                    "type": "STRING"
                },
                {
                    "name": "TW_BUILD_CONFIG",
                    "value": "TWMetricsOnly",
                    "type": "STRING"
                },
                {
                    "name": "TW_BUILD_ARCH",
                    "value": "x64",
                    "type": "STRING"
                },
                {
                    "name": "TW_IS_TEST",
                    "value": "False",
                    "type": "STRING"
                },
                {
                    "name": "TW_TEST_FRAMEWORK",
                    "value": "",
                    "type": "STRING"
                }
            ],
            "clangTidyChecks": "-*, bugprone-bad-signal-to-kill-thread, bugprone-bool-pointer-implicit-conversion, bugprone-branch-clone, bugprone-copy-constructor-init, bugprone-dangling-handle, bugprone-dynamic-static-initializers, bugprone-exception-escape, bugprone-forward-declaration-namespace, bugprone-forwarding-reference-overload, bugprone-incorrect-roundings, bugprone-infinite-loop, bugprone-integer-division, bugprone-macro-parentheses, bugprone-macro-repeated-side-effects, bugprone-misplaced-operator-in-strlen-in-alloc, bugprone-misplaced-pointer-arithmetic-in-alloc, bugprone-misplaced-widening-cast, bugprone-move-forwarding-reference, bugprone-multiple-statement-macro, bugprone-not-null-terminated-result, bugprone-parent-virtual-call, bugprone-posix-return, bugprone-reserved-identifier, bugprone-signed-char-misuse, bugprone-sizeof-expression, bugprone-spuriously-wake-up-functions (cert-con36-c), bugprone-string-literal-with-embedded-nul, bugprone-suspicious-enum-usage, bugprone-suspicious-include, bugprone-suspicious-memset-usage, bugprone-suspicious-missing-comma, bugprone-suspicious-semicolon, bugprone-suspicious-string-compare, bugprone-swapped-arguments, bugprone-terminating-continue, bugprone-too-small-loop-variable, bugprone-undefined-memory-manipulation, bugprone-undelegated-constructor, bugprone-unhandled-self-assignment (cert-oop54-cpp), bugprone-unused-raii, bugprone-use-after-move, cert-dcl21-cpp, cert-dcl50-cpp, cert-err34-c, cert-err58-cpp, cert-flp30-c, cert-mem57-cpp, cert-msc50-cpp, cert-msc51-cpp, cert-oop57-cpp, cert-oop58-cpp, clang-analyzer-core.DivideZero, clang-analyzer-core.NonNullParamChecker, clang-analyzer-core.NullDereference, clang-analyzer-core.StackAddressEscape, clang-analyzer-core.UndefinedBinaryOperatorResult, clang-analyzer-core.VLASize, clang-analyzer-core.uninitialized.ArraySubscript, clang-analyzer-core.uninitialized.Assign, clang-analyzer-core.uninitialized.Branch, clang-analyzer-core.uninitialized.CapturedBlockVariable, clang-analyzer-core.uninitialized.UndefReturn, clang-analyzer-cplusplus.InnerPointer, clang-analyzer-cplusplus.NewDelete, clang-analyzer-cplusplus.NewDeleteLeaks, clang-analyzer-deadcode.DeadStores, clang-analyzer-optin.performance.Padding, clang-analyzer-optin.portability.UnixAPI, clang-analyzer-valist.CopyToSelf, clang-analyzer-valist.Uninitialized, clang-analyzer-valist.Unterminated, clang-analyzer-security.FloatLoopCounter, clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling, clang-analyzer-core.CallAndMessage, clang-analyzer-optin.cplusplus.UninitializedObject, clang-analyzer-optin.cplusplus.VirtualCall, clang-analyzer-security.insecureAPI.UncheckedReturn, clang-analyzer-security.insecureAPI.bcmp, clang-analyzer-security.insecureAPI.bcopy, clang-analyzer-security.insecureAPI.bzero, clang-analyzer-security.insecureAPI.getpw, clang-analyzer-security.insecureAPI.gets, clang-analyzer-security.insecureAPI.mkstemp, clang-analyzer-security.insecureAPI.mktemp, clang-analyzer-security.insecureAPI.rand, clang-analyzer-security.insecureAPI.strcpy, clang-analyzer-security.insecureAPI.vfork, clang-analyzer-unix.API, clang-analyzer-unix.Malloc, clang-analyzer-unix.MallocSizeof, clang-analyzer-unix.MismatchedDeallocator, clang-analyzer-unix.Vfork, clang-analyzer-unix.cstring.BadSizeArg, clang-analyzer-unix.cstring.NullArg, cppcoreguidelines-avoid-non-const-global-variables, cppcoreguidelines-avoid-goto, cppcoreguidelines-interfaces-global-init, cppcoreguidelines-macro-usage, cppcoreguidelines-narrowing-conversions, cppcoreguidelines-no-malloc, cppcoreguidelines-pro-type-const-cast, cppcoreguidelines-pro-type-member-init, cppcoreguidelines-pro-type-reinterpret-cast, cppcoreguidelines-pro-type-static-cast-downcast, cppcoreguidelines-pro-type-vararg, cppcoreguidelines-slicing, cppcoreguidelines-special-member-functions, fuchsia-statically-constructed-objects, google-default-arguments, google-explicit-constructor, google-runtime-int, google-runtime-operator, google-upgrade-googletest-case, hicpp-avoid-goto, hicpp-multiway-paths-covered, hicpp-signed-bitwise, llvm-header-guard, misc-definitions-in-headers, misc-misplaced-const, misc-new-delete-overloads, misc-non-copyable-objects, misc-no-recursion, misc-redundant-expression, misc-static-assert, misc-unconventional-assign-operator, misc-unused-alias-decls, misc-unused-parameters, misc-unused-using-decls, modernize-deprecated-headers, modernize-pass-by-value, modernize-raw-string-literal, modernize-redundant-void-arg, modernize-return-braced-init-list, modernize-unary-static-assert, modernize-use-bool-literals, modernize-use-default-member-init, modernize-use-equals-default, modernize-use-equals-delete, modernize-use-noexcept, modernize-use-nullptr, modernize-use-override, performance-implicit-conversion-in-loop, performance-move-const-arg, performance-move-constructor-init, performance-no-automatic-move, performance-noexcept-move-constructor, performance-trivially-destructible, performance-unnecessary-copy-initialization, performance-unnecessary-value-param, readability-it-bool-conversion, readability-avoid-const-params-in-decls, readability-const-return-type, readability-convert-member-functions-to-static, readability-deleted-default, readability-delete-null-pointer, readability-else-after-return, readability-function-size, readability-inconsistent-declaration-parameter-name, readability-isolate-declaration, readability-make-member-function-const, readability-misplaced-array-index, readability-named-parameter, readability-non-const-parameter, readability-qualified-auto, readability-redundant-access-specifiers, readability-redundant-control-flow, readability-redundant-declaration, readability-redundant-function-ptr-dereference, readability-redundant-member-init, readability-redundant-preprocessor, readability-simplify-boolean-expr, readability-simplify-subscript-expr, readability-static-accessed-through-instance, readability-static-definition-in-anonymous-namespace",
            "buildRoot": "${env.TWWorkspaceHome}/TWBuilds/TWInt/CoreProcessSample/Windows-x64-TWMetricsOnly",
            "installRoot": "${env.TWWorkspaceHome}/TWBuilds/TWInt/CoreProcessSample/Windows-x64-TWMetricsOnly/install"
        },
        {
            "name": "Windows-x64-TWSimulation",
            "generator": "Ninja",
            "configurationType": "Debug",
            "inheritEnvironments": [ "clang_cl_x64" ],
            "cmakeCommandArgs": "",
            "buildCommandArgs": "",
            "ctestCommandArgs": "",
            "variables": [
                {
                    "name": "CMAKE_CXX_COMPILER",
                    "value": "${env.LLVMInstallDir}/bin/clang-cl.exe",
                    "type": "FILEPATH"
                },
                {
                    "name": "CMAKE_AR",
                    "value": "${env.LLVMInstallDir}/bin/clang-lib.exe",
                    "type": "FILEPATH"
                },
                {
                    "name": "CMAKE_LINKER",
                    "value": "${env.LLVMInstallDir}/bin/lld-link.exe",
                    "type": "FILEPATH"
                },
                {
                    "name": "TW_BUILD_OS",
                    "value": "Windows",
                    "type": "STRING"
                },
                {
                    "name": "TW_BUILD_CONFIG",
                    "value": "TWSimulation",
                    "type": "STRING"
                },
                {
                    "name": "TW_BUILD_ARCH",
                    "value": "x64",
                    "type": "STRING"
                },
                {
                    "name": "TW_IS_TEST",
                    "value": "False",
                    "type": "STRING"
                },
                {
                    "name": "TW_TEST_FRAMEWORK",
                    "value": "",
                    "type": "STRING"
                }
            ],
            "clangTidyChecks": "-*, bugprone-bad-signal-to-kill-thread, bugprone-bool-pointer-implicit-conversion, bugprone-branch-clone, bugprone-copy-constructor-init, bugprone-dangling-handle, bugprone-dynamic-static-initializers, bugprone-exception-escape, bugprone-forward-declaration-namespace, bugprone-forwarding-reference-overload, bugprone-incorrect-roundings, bugprone-infinite-loop, bugprone-integer-division, bugprone-macro-parentheses, bugprone-macro-repeated-side-effects, bugprone-misplaced-operator-in-strlen-in-alloc, bugprone-misplaced-pointer-arithmetic-in-alloc, bugprone-misplaced-widening-cast, bugprone-move-forwarding-reference, bugprone-multiple-statement-macro, bugprone-not-null-terminated-result, bugprone-parent-virtual-call, bugprone-posix-return, bugprone-reserved-identifier, bugprone-signed-char-misuse, bugprone-sizeof-expression, bugprone-spuriously-wake-up-functions (cert-con36-c), bugprone-string-literal-with-embedded-nul, bugprone-suspicious-enum-usage, bugprone-suspicious-include, bugprone-suspicious-memset-usage, bugprone-suspicious-missing-comma, bugprone-suspicious-semicolon, bugprone-suspicious-string-compare, bugprone-swapped-arguments, bugprone-terminating-continue, bugprone-too-small-loop-variable, bugprone-undefined-memory-manipulation, bugprone-undelegated-constructor, bugprone-unhandled-self-assignment (cert-oop54-cpp), bugprone-unused-raii, bugprone-use-after-move, cert-dcl21-cpp, cert-dcl50-cpp, cert-err34-c, cert-err58-cpp, cert-flp30-c, cert-mem57-cpp, cert-msc50-cpp, cert-msc51-cpp, cert-oop57-cpp, cert-oop58-cpp, clang-analyzer-core.DivideZero, clang-analyzer-core.NonNullParamChecker, clang-analyzer-core.NullDereference, clang-analyzer-core.StackAddressEscape, clang-analyzer-core.UndefinedBinaryOperatorResult, clang-analyzer-core.VLASize, clang-analyzer-core.uninitialized.ArraySubscript, clang-analyzer-core.uninitialized.Assign, clang-analyzer-core.uninitialized.Branch, clang-analyzer-core.uninitialized.CapturedBlockVariable, clang-analyzer-core.uninitialized.UndefReturn, clang-analyzer-cplusplus.InnerPointer, clang-analyzer-cplusplus.NewDelete, clang-analyzer-cplusplus.NewDeleteLeaks, clang-analyzer-deadcode.DeadStores, clang-analyzer-optin.performance.Padding, clang-analyzer-optin.portability.UnixAPI, clang-analyzer-valist.CopyToSelf, clang-analyzer-valist.Uninitialized, clang-analyzer-valist.Unterminated, clang-analyzer-security.FloatLoopCounter, clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling, clang-analyzer-core.CallAndMessage, clang-analyzer-optin.cplusplus.UninitializedObject, clang-analyzer-optin.cplusplus.VirtualCall, clang-analyzer-security.insecureAPI.UncheckedReturn, clang-analyzer-security.insecureAPI.bcmp, clang-analyzer-security.insecureAPI.bcopy, clang-analyzer-security.insecureAPI.bzero, clang-analyzer-security.insecureAPI.getpw, clang-analyzer-security.insecureAPI.gets, clang-analyzer-security.insecureAPI.mkstemp, clang-analyzer-security.insecureAPI.mktemp, clang-analyzer-security.insecureAPI.rand, clang-analyzer-security.insecureAPI.strcpy, clang-analyzer-security.insecureAPI.vfork, clang-analyzer-unix.API, clang-analyzer-unix.Malloc, clang-analyzer-unix.MallocSizeof, clang-analyzer-unix.MismatchedDeallocator, clang-analyzer-unix.Vfork, clang-analyzer-unix.cstring.BadSizeArg, clang-analyzer-unix.cstring.NullArg, cppcoreguidelines-avoid-non-const-global-variables, cppcoreguidelines-avoid-goto, cppcoreguidelines-interfaces-global-init, cppcoreguidelines-macro-usage, cppcoreguidelines-narrowing-conversions, cppcoreguidelines-no-malloc, cppcoreguidelines-pro-type-const-cast, cppcoreguidelines-pro-type-member-init, cppcoreguidelines-pro-type-reinterpret-cast, cppcoreguidelines-pro-type-static-cast-downcast, cppcoreguidelines-pro-type-vararg, cppcoreguidelines-slicing, cppcoreguidelines-special-member-functions, fuchsia-statically-constructed-objects, google-default-arguments, google-explicit-constructor, google-runtime-int, google-runtime-operator, google-upgrade-googletest-case, hicpp-avoid-goto, hicpp-multiway-paths-covered, hicpp-signed-bitwise, llvm-header-guard, misc-definitions-in-headers, misc-misplaced-const, misc-new-delete-overloads, misc-non-copyable-objects, misc-no-recursion, misc-redundant-expression, misc-static-assert, misc-unconventional-assign-operator, misc-unused-alias-decls, misc-unused-parameters, misc-unused-using-decls, modernize-deprecated-headers, modernize-pass-by-value, modernize-raw-string-literal, modernize-redundant-void-arg, modernize-return-braced-init-list, modernize-unary-static-assert, modernize-use-bool-literals, modernize-use-default-member-init, modernize-use-equals-default, modernize-use-equals-delete, modernize-use-noexcept, modernize-use-nullptr, modernize-use-override, performance-implicit-conversion-in-loop, performance-move-const-arg, performance-move-constructor-init, performance-no-automatic-move, performance-noexcept-move-constructor, performance-trivially-destructible, performance-unnecessary-copy-initialization, performance-unnecessary-value-param, readability-it-bool-conversion, readability-avoid-const-params-in-decls, readability-const-return-type, readability-convert-member-functions-to-static, readability-deleted-default, readability-delete-null-pointer, readability-else-after-return, readability-function-size, readability-inconsistent-declaration-parameter-name, readability-isolate-declaration, readability-make-member-function-const, readability-misplaced-array-index, readability-named-parameter, readability-non-const-parameter, readability-qualified-auto, readability-redundant-access-specifiers, readability-redundant-control-flow, readability-redundant-declaration, readability-redundant-function-ptr-dereference, readability-redundant-member-init, readability-redundant-preprocessor, readability-simplify-boolean-expr, readability-simplify-subscript-expr, readability-static-accessed-through-instance, readability-static-definition-in-anonymous-namespace",
            "buildRoot": "${env.TWWorkspaceHome}/TWBuilds/TWInt/CoreProcessSample/Windows-x64-TWSimulation",
            "installRoot": "${env.TWWorkspaceHome}/TWBuilds/TWInt/CoreProcessSample/Windows-x64-TWSimulation/install"
        },
        {
            "name": "Windows-x64-TWRelease",
            "generator": "Ninja",
            "configurationType": "Release",
            "inheritEnvironments": [ "clang_cl_x64" ],
            "cmakeCommandArgs": "",
            "buildCommandArgs": "",
            "ctestCommandArgs": "",
            "variables": [
                {
                    "name": "CMAKE_CXX_COMPILER",
                    "value": "${env.LLVMInstallDir}/bin/clang-cl.exe",
                    "type": "FILEPATH"
                },
                {
                    "name": "CMAKE_AR",
                    "value": "${env.LLVMInstallDir}/bin/clang-lib.exe",
                    "type": "FILEPATH"
                },
                {
                    "name": "CMAKE_LINKER",
                    "value": "${env.LLVMInstallDir}/bin/lld-link.exe",
                    "type": "FILEPATH"
                },
                {
                    "name": "TW_BUILD_OS",
                    "value": "Windows",
                    "type": "STRING"
                },
                {
                    "name": "TW_BUILD_CONFIG",
                    "value": "TWRelease",
                    "type": "STRING"
                },
                {
                    "name": "TW_BUILD_ARCH",
                    "value": "x64",
                    "type": "STRING"
                },
                {
                    "name": "TW_IS_TEST",
                    "value": "False",
                    "type": "STRING"
                },
                {
                    "name": "TW_TEST_FRAMEWORK",
                    "value": "",
                    "type": "STRING"
                }
            ],
            "clangTidyChecks": "-*, bugprone-bad-signal-to-kill-thread, bugprone-bool-pointer-implicit-conversion, bugprone-branch-clone, bugprone-copy-constructor-init, bugprone-dangling-handle, bugprone-dynamic-static-initializers, bugprone-exception-escape, bugprone-forward-declaration-namespace, bugprone-forwarding-reference-overload, bugprone-incorrect-roundings, bugprone-infinite-loop, bugprone-integer-division, bugprone-macro-parentheses, bugprone-macro-repeated-side-effects, bugprone-misplaced-operator-in-strlen-in-alloc, bugprone-misplaced-pointer-arithmetic-in-alloc, bugprone-misplaced-widening-cast, bugprone-move-forwarding-reference, bugprone-multiple-statement-macro, bugprone-not-null-terminated-result, bugprone-parent-virtual-call, bugprone-posix-return, bugprone-reserved-identifier, bugprone-signed-char-misuse, bugprone-sizeof-expression, bugprone-spuriously-wake-up-functions (cert-con36-c), bugprone-string-literal-with-embedded-nul, bugprone-suspicious-enum-usage, bugprone-suspicious-include, bugprone-suspicious-memset-usage, bugprone-suspicious-missing-comma, bugprone-suspicious-semicolon, bugprone-suspicious-string-compare, bugprone-swapped-arguments, bugprone-terminating-continue, bugprone-too-small-loop-variable, bugprone-undefined-memory-manipulation, bugprone-undelegated-constructor, bugprone-unhandled-self-assignment (cert-oop54-cpp), bugprone-unused-raii, bugprone-use-after-move, cert-dcl21-cpp, cert-dcl50-cpp, cert-err34-c, cert-err58-cpp, cert-flp30-c, cert-mem57-cpp, cert-msc50-cpp, cert-msc51-cpp, cert-oop57-cpp, cert-oop58-cpp, clang-analyzer-core.DivideZero, clang-analyzer-core.NonNullParamChecker, clang-analyzer-core.NullDereference, clang-analyzer-core.StackAddressEscape, clang-analyzer-core.UndefinedBinaryOperatorResult, clang-analyzer-core.VLASize, clang-analyzer-core.uninitialized.ArraySubscript, clang-analyzer-core.uninitialized.Assign, clang-analyzer-core.uninitialized.Branch, clang-analyzer-core.uninitialized.CapturedBlockVariable, clang-analyzer-core.uninitialized.UndefReturn, clang-analyzer-cplusplus.InnerPointer, clang-analyzer-cplusplus.NewDelete, clang-analyzer-cplusplus.NewDeleteLeaks, clang-analyzer-deadcode.DeadStores, clang-analyzer-optin.performance.Padding, clang-analyzer-optin.portability.UnixAPI, clang-analyzer-valist.CopyToSelf, clang-analyzer-valist.Uninitialized, clang-analyzer-valist.Unterminated, clang-analyzer-security.FloatLoopCounter, clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling, clang-analyzer-core.CallAndMessage, clang-analyzer-optin.cplusplus.UninitializedObject, clang-analyzer-optin.cplusplus.VirtualCall, clang-analyzer-security.insecureAPI.UncheckedReturn, clang-analyzer-security.insecureAPI.bcmp, clang-analyzer-security.insecureAPI.bcopy, clang-analyzer-security.insecureAPI.bzero, clang-analyzer-security.insecureAPI.getpw, clang-analyzer-security.insecureAPI.gets, clang-analyzer-security.insecureAPI.mkstemp, clang-analyzer-security.insecureAPI.mktemp, clang-analyzer-security.insecureAPI.rand, clang-analyzer-security.insecureAPI.strcpy, clang-analyzer-security.insecureAPI.vfork, clang-analyzer-unix.API, clang-analyzer-unix.Malloc, clang-analyzer-unix.MallocSizeof, clang-analyzer-unix.MismatchedDeallocator, clang-analyzer-unix.Vfork, clang-analyzer-unix.cstring.BadSizeArg, clang-analyzer-unix.cstring.NullArg, cppcoreguidelines-avoid-non-const-global-variables, cppcoreguidelines-avoid-goto, cppcoreguidelines-interfaces-global-init, cppcoreguidelines-macro-usage, cppcoreguidelines-narrowing-conversions, cppcoreguidelines-no-malloc, cppcoreguidelines-pro-type-const-cast, cppcoreguidelines-pro-type-member-init, cppcoreguidelines-pro-type-reinterpret-cast, cppcoreguidelines-pro-type-static-cast-downcast, cppcoreguidelines-pro-type-vararg, cppcoreguidelines-slicing, cppcoreguidelines-special-member-functions, fuchsia-statically-constructed-objects, google-default-arguments, google-explicit-constructor, google-runtime-int, google-runtime-operator, google-upgrade-googletest-case, hicpp-avoid-goto, hicpp-multiway-paths-covered, hicpp-signed-bitwise, llvm-header-guard, misc-definitions-in-headers, misc-misplaced-const, misc-new-delete-overloads, misc-non-copyable-objects, misc-no-recursion, misc-redundant-expression, misc-static-assert, misc-unconventional-assign-operator, misc-unused-alias-decls, misc-unused-parameters, misc-unused-using-decls, modernize-deprecated-headers, modernize-pass-by-value, modernize-raw-string-literal, modernize-redundant-void-arg, modernize-return-braced-init-list, modernize-unary-static-assert, modernize-use-bool-literals, modernize-use-default-member-init, modernize-use-equals-default, modernize-use-equals-delete, modernize-use-noexcept, modernize-use-nullptr, modernize-use-override, performance-implicit-conversion-in-loop, performance-move-const-arg, performance-move-constructor-init, performance-no-automatic-move, performance-noexcept-move-constructor, performance-trivially-destructible, performance-unnecessary-copy-initialization, performance-unnecessary-value-param, readability-it-bool-conversion, readability-avoid-const-params-in-decls, readability-const-return-type, readability-convert-member-functions-to-static, readability-deleted-default, readability-delete-null-pointer, readability-else-after-return, readability-function-size, readability-inconsistent-declaration-parameter-name, readability-isolate-declaration, readability-make-member-function-const, readability-misplaced-array-index, readability-named-parameter, readability-non-const-parameter, readability-qualified-auto, readability-redundant-access-specifiers, readability-redundant-control-flow, readability-redundant-declaration, readability-redundant-function-ptr-dereference, readability-redundant-member-init, readability-redundant-preprocessor, readability-simplify-boolean-expr, readability-simplify-subscript-expr, readability-static-accessed-through-instance, readability-static-definition-in-anonymous-namespace",
            "buildRoot": "${env.TWWorkspaceHome}/TWBuilds/TWInt/CoreProcessSample/Windows-x64-TWRelease",
            "installRoot": "${env.TWWorkspaceHome}/TWBuilds/TWInt/CoreProcessSample/Windows-x64-TWRelease/install"
        },
        {
            "name": "Windows-ARM64-TWDebug",
            "generator": "Ninja",
            "configurationType": "Debug",
            "inheritEnvironments": [ "clang_cl_arm64" ],
            "cmakeCommandArgs": "",
            "buildCommandArgs": "",
            "ctestCommandArgs": "",
            "variables": [
                {
                    "name": "CMAKE_CXX_COMPILER",
                    "value": "${env.LLVMInstallDir}/bin/clang-cl.exe",
                    "type": "FILEPATH"
                },
                {
                    "name": "CMAKE_AR",
                    "value": "${env.LLVMInstallDir}/bin/clang-lib.exe",
                    "type": "FILEPATH"
                },
                {
                    "name": "CMAKE_LINKER",
                    "value": "${env.LLVMInstallDir}/bin/lld-link.exe",
                    "type": "FILEPATH"
                },
                {
                    "name": "TW_BUILD_OS",
                    "value": "Windows",
                    "type": "STRING"
                },
                {
                    "name": "TW_BUILD_CONFIG",
                    "value": "TWDebug",
                    "type": "STRING"
                },
                {
                    "name": "TW_BUILD_ARCH",
                    "value": "ARM64",
                    "type": "STRING"
                },
                {
                    "name": "TW_IS_TEST",
                    "value": "False",
                    "type": "STRING"
                },
                {
                    "name": "TW_TEST_FRAMEWORK",
                    "value": "",
                    "type": "STRING"
                }
            ],
            "clangTidyChecks": "-*, bugprone-bad-signal-to-kill-thread, bugprone-bool-pointer-implicit-conversion, bugprone-branch-clone, bugprone-copy-constructor-init, bugprone-dangling-handle, bugprone-dynamic-static-initializers, bugprone-exception-escape, bugprone-forward-declaration-namespace, bugprone-forwarding-reference-overload, bugprone-incorrect-roundings, bugprone-infinite-loop, bugprone-integer-division, bugprone-macro-parentheses, bugprone-macro-repeated-side-effects, bugprone-misplaced-operator-in-strlen-in-alloc, bugprone-misplaced-pointer-arithmetic-in-alloc, bugprone-misplaced-widening-cast, bugprone-move-forwarding-reference, bugprone-multiple-statement-macro, bugprone-not-null-terminated-result, bugprone-parent-virtual-call, bugprone-posix-return, bugprone-reserved-identifier, bugprone-signed-char-misuse, bugprone-sizeof-expression, bugprone-spuriously-wake-up-functions (cert-con36-c), bugprone-string-literal-with-embedded-nul, bugprone-suspicious-enum-usage, bugprone-suspicious-include, bugprone-suspicious-memset-usage, bugprone-suspicious-missing-comma, bugprone-suspicious-semicolon, bugprone-suspicious-string-compare, bugprone-swapped-arguments, bugprone-terminating-continue, bugprone-too-small-loop-variable, bugprone-undefined-memory-manipulation, bugprone-undelegated-constructor, bugprone-unhandled-self-assignment (cert-oop54-cpp), bugprone-unused-raii, bugprone-use-after-move, cert-dcl21-cpp, cert-dcl50-cpp, cert-err34-c, cert-err58-cpp, cert-flp30-c, cert-mem57-cpp, cert-msc50-cpp, cert-msc51-cpp, cert-oop57-cpp, cert-oop58-cpp, clang-analyzer-core.DivideZero, clang-analyzer-core.NonNullParamChecker, clang-analyzer-core.NullDereference, clang-analyzer-core.StackAddressEscape, clang-analyzer-core.UndefinedBinaryOperatorResult, clang-analyzer-core.VLASize, clang-analyzer-core.uninitialized.ArraySubscript, clang-analyzer-core.uninitialized.Assign, clang-analyzer-core.uninitialized.Branch, clang-analyzer-core.uninitialized.CapturedBlockVariable, clang-analyzer-core.uninitialized.UndefReturn, clang-analyzer-cplusplus.InnerPointer, clang-analyzer-cplusplus.NewDelete, clang-analyzer-cplusplus.NewDeleteLeaks, clang-analyzer-deadcode.DeadStores, clang-analyzer-optin.performance.Padding, clang-analyzer-optin.portability.UnixAPI, clang-analyzer-valist.CopyToSelf, clang-analyzer-valist.Uninitialized, clang-analyzer-valist.Unterminated, clang-analyzer-security.FloatLoopCounter, clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling, clang-analyzer-core.CallAndMessage, clang-analyzer-optin.cplusplus.UninitializedObject, clang-analyzer-optin.cplusplus.VirtualCall, clang-analyzer-security.insecureAPI.UncheckedReturn, clang-analyzer-security.insecureAPI.bcmp, clang-analyzer-security.insecureAPI.bcopy, clang-analyzer-security.insecureAPI.bzero, clang-analyzer-security.insecureAPI.getpw, clang-analyzer-security.insecureAPI.gets, clang-analyzer-security.insecureAPI.mkstemp, clang-analyzer-security.insecureAPI.mktemp, clang-analyzer-security.insecureAPI.rand, clang-analyzer-security.insecureAPI.strcpy, clang-analyzer-security.insecureAPI.vfork, clang-analyzer-unix.API, clang-analyzer-unix.Malloc, clang-analyzer-unix.MallocSizeof, clang-analyzer-unix.MismatchedDeallocator, clang-analyzer-unix.Vfork, clang-analyzer-unix.cstring.BadSizeArg, clang-analyzer-unix.cstring.NullArg, cppcoreguidelines-avoid-non-const-global-variables, cppcoreguidelines-avoid-goto, cppcoreguidelines-interfaces-global-init, cppcoreguidelines-macro-usage, cppcoreguidelines-narrowing-conversions, cppcoreguidelines-no-malloc, cppcoreguidelines-pro-type-const-cast, cppcoreguidelines-pro-type-member-init, cppcoreguidelines-pro-type-reinterpret-cast, cppcoreguidelines-pro-type-static-cast-downcast, cppcoreguidelines-pro-type-vararg, cppcoreguidelines-slicing, cppcoreguidelines-special-member-functions, fuchsia-statically-constructed-objects, google-default-arguments, google-explicit-constructor, google-runtime-int, google-runtime-operator, google-upgrade-googletest-case, hicpp-avoid-goto, hicpp-multiway-paths-covered, hicpp-signed-bitwise, llvm-header-guard, misc-definitions-in-headers, misc-misplaced-const, misc-new-delete-overloads, misc-non-copyable-objects, misc-no-recursion, misc-redundant-expression, misc-static-assert, misc-unconventional-assign-operator, misc-unused-alias-decls, misc-unused-parameters, misc-unused-using-decls, modernize-deprecated-headers, modernize-pass-by-value, modernize-raw-string-literal, modernize-redundant-void-arg, modernize-return-braced-init-list, modernize-unary-static-assert, modernize-use-bool-literals, modernize-use-default-member-init, modernize-use-equals-default, modernize-use-equals-delete, modernize-use-noexcept, modernize-use-nullptr, modernize-use-override, performance-implicit-conversion-in-loop, performance-move-const-arg, performance-move-constructor-init, performance-no-automatic-move, performance-noexcept-move-constructor, performance-trivially-destructible, performance-unnecessary-copy-initialization, performance-unnecessary-value-param, readability-it-bool-conversion, readability-avoid-const-params-in-decls, readability-const-return-type, readability-convert-member-functions-to-static, readability-deleted-default, readability-delete-null-pointer, readability-else-after-return, readability-function-size, readability-inconsistent-declaration-parameter-name, readability-isolate-declaration, readability-make-member-function-const, readability-misplaced-array-index, readability-named-parameter, readability-non-const-parameter, readability-qualified-auto, readability-redundant-access-specifiers, readability-redundant-control-flow, readability-redundant-declaration, readability-redundant-function-ptr-dereference, readability-redundant-member-init, readability-redundant-preprocessor, readability-simplify-boolean-expr, readability-simplify-subscript-expr, readability-static-accessed-through-instance, readability-static-definition-in-anonymous-namespace",
            "buildRoot": "${env.TWWorkspaceHome}/TWBuilds/TWInt/CoreProcessSample/Windows-ARM64-TWDebug",
            "installRoot": "${env.TWWorkspaceHome}/TWBuilds/TWInt/CoreProcessSample/Windows-ARM64-TWDebug/install"
        },
        {
            "name": "Windows-ARM64-TWMetricsOnly",
            "generator": "Ninja",
            "configurationType": "Debug",
            "inheritEnvironments": [ "clang_cl_arm64" ],
            "cmakeCommandArgs": "",
            "buildCommandArgs": "",
            "ctestCommandArgs": "",
            "variables": [
                {
                    "name": "CMAKE_CXX_COMPILER",
                    "value": "${env.LLVMInstallDir}/bin/clang-cl.exe",
                    "type": "FILEPATH"
                },
                {
                    "name": "CMAKE_AR",
                    "value": "${env.LLVMInstallDir}/bin/clang-lib.exe",
                    "type": "FILEPATH"
                },
                {
                    "name": "CMAKE_LINKER",
                    "value": "${env.LLVMInstallDir}/bin/lld-link.exe",
                    "type": "FILEPATH"
                },
                {
                    "name": "TW_BUILD_OS",
                    "value": "Windows",
                    "type": "STRING"
                },
                {
                    "name": "TW_BUILD_CONFIG",
                    "value": "TWMetricsOnly",
                    "type": "STRING"
                },
                {
                    "name": "TW_BUILD_ARCH",
                    "value": "ARM64",
                    "type": "STRING"
                },
                {
                    "name": "TW_IS_TEST",
                    "value": "False",
                    "type": "STRING"
                },
                {
                    "name": "TW_TEST_FRAMEWORK",
                    "value": "",
                    "type": "STRING"
                }
            ],
            "clangTidyChecks": "-*, bugprone-bad-signal-to-kill-thread, bugprone-bool-pointer-implicit-conversion, bugprone-branch-clone, bugprone-copy-constructor-init, bugprone-dangling-handle, bugprone-dynamic-static-initializers, bugprone-exception-escape, bugprone-forward-declaration-namespace, bugprone-forwarding-reference-overload, bugprone-incorrect-roundings, bugprone-infinite-loop, bugprone-integer-division, bugprone-macro-parentheses, bugprone-macro-repeated-side-effects, bugprone-misplaced-operator-in-strlen-in-alloc, bugprone-misplaced-pointer-arithmetic-in-alloc, bugprone-misplaced-widening-cast, bugprone-move-forwarding-reference, bugprone-multiple-statement-macro, bugprone-not-null-terminated-result, bugprone-parent-virtual-call, bugprone-posix-return, bugprone-reserved-identifier, bugprone-signed-char-misuse, bugprone-sizeof-expression, bugprone-spuriously-wake-up-functions (cert-con36-c), bugprone-string-literal-with-embedded-nul, bugprone-suspicious-enum-usage, bugprone-suspicious-include, bugprone-suspicious-memset-usage, bugprone-suspicious-missing-comma, bugprone-suspicious-semicolon, bugprone-suspicious-string-compare, bugprone-swapped-arguments, bugprone-terminating-continue, bugprone-too-small-loop-variable, bugprone-undefined-memory-manipulation, bugprone-undelegated-constructor, bugprone-unhandled-self-assignment (cert-oop54-cpp), bugprone-unused-raii, bugprone-use-after-move, cert-dcl21-cpp, cert-dcl50-cpp, cert-err34-c, cert-err58-cpp, cert-flp30-c, cert-mem57-cpp, cert-msc50-cpp, cert-msc51-cpp, cert-oop57-cpp, cert-oop58-cpp, clang-analyzer-core.DivideZero, clang-analyzer-core.NonNullParamChecker, clang-analyzer-core.NullDereference, clang-analyzer-core.StackAddressEscape, clang-analyzer-core.UndefinedBinaryOperatorResult, clang-analyzer-core.VLASize, clang-analyzer-core.uninitialized.ArraySubscript, clang-analyzer-core.uninitialized.Assign, clang-analyzer-core.uninitialized.Branch, clang-analyzer-core.uninitialized.CapturedBlockVariable, clang-analyzer-core.uninitialized.UndefReturn, clang-analyzer-cplusplus.InnerPointer, clang-analyzer-cplusplus.NewDelete, clang-analyzer-cplusplus.NewDeleteLeaks, clang-analyzer-deadcode.DeadStores, clang-analyzer-optin.performance.Padding, clang-analyzer-optin.portability.UnixAPI, clang-analyzer-valist.CopyToSelf, clang-analyzer-valist.Uninitialized, clang-analyzer-valist.Unterminated, clang-analyzer-security.FloatLoopCounter, clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling, clang-analyzer-core.CallAndMessage, clang-analyzer-optin.cplusplus.UninitializedObject, clang-analyzer-optin.cplusplus.VirtualCall, clang-analyzer-security.insecureAPI.UncheckedReturn, clang-analyzer-security.insecureAPI.bcmp, clang-analyzer-security.insecureAPI.bcopy, clang-analyzer-security.insecureAPI.bzero, clang-analyzer-security.insecureAPI.getpw, clang-analyzer-security.insecureAPI.gets, clang-analyzer-security.insecureAPI.mkstemp, clang-analyzer-security.insecureAPI.mktemp, clang-analyzer-security.insecureAPI.rand, clang-analyzer-security.insecureAPI.strcpy, clang-analyzer-security.insecureAPI.vfork, clang-analyzer-unix.API, clang-analyzer-unix.Malloc, clang-analyzer-unix.MallocSizeof, clang-analyzer-unix.MismatchedDeallocator, clang-analyzer-unix.Vfork, clang-analyzer-unix.cstring.BadSizeArg, clang-analyzer-unix.cstring.NullArg, cppcoreguidelines-avoid-non-const-global-variables, cppcoreguidelines-avoid-goto, cppcoreguidelines-interfaces-global-init, cppcoreguidelines-macro-usage, cppcoreguidelines-narrowing-conversions, cppcoreguidelines-no-malloc, cppcoreguidelines-pro-type-const-cast, cppcoreguidelines-pro-type-member-init, cppcoreguidelines-pro-type-reinterpret-cast, cppcoreguidelines-pro-type-static-cast-downcast, cppcoreguidelines-pro-type-vararg, cppcoreguidelines-slicing, cppcoreguidelines-special-member-functions, fuchsia-statically-constructed-objects, google-default-arguments, google-explicit-constructor, google-runtime-int, google-runtime-operator, google-upgrade-googletest-case, hicpp-avoid-goto, hicpp-multiway-paths-covered, hicpp-signed-bitwise, llvm-header-guard, misc-definitions-in-headers, misc-misplaced-const, misc-new-delete-overloads, misc-non-copyable-objects, misc-no-recursion, misc-redundant-expression, misc-static-assert, misc-unconventional-assign-operator, misc-unused-alias-decls, misc-unused-parameters, misc-unused-using-decls, modernize-deprecated-headers, modernize-pass-by-value, modernize-raw-string-literal, modernize-redundant-void-arg, modernize-return-braced-init-list, modernize-unary-static-assert, modernize-use-bool-literals, modernize-use-default-member-init, modernize-use-equals-default, modernize-use-equals-delete, modernize-use-noexcept, modernize-use-nullptr, modernize-use-override, performance-implicit-conversion-in-loop, performance-move-const-arg, performance-move-constructor-init, performance-no-automatic-move, performance-noexcept-move-constructor, performance-trivially-destructible, performance-unnecessary-copy-initialization, performance-unnecessary-value-param, readability-it-bool-conversion, readability-avoid-const-params-in-decls, readability-const-return-type, readability-convert-member-functions-to-static, readability-deleted-default, readability-delete-null-pointer, readability-else-after-return, readability-function-size, readability-inconsistent-declaration-parameter-name, readability-isolate-declaration, readability-make-member-function-const, readability-misplaced-array-index, readability-named-parameter, readability-non-const-parameter, readability-qualified-auto, readability-redundant-access-specifiers, readability-redundant-control-flow, readability-redundant-declaration, readability-redundant-function-ptr-dereference, readability-redundant-member-init, readability-redundant-preprocessor, readability-simplify-boolean-expr, readability-simplify-subscript-expr, readability-static-accessed-through-instance, readability-static-definition-in-anonymous-namespace",
            "buildRoot": "${env.TWWorkspaceHome}/TWBuilds/TWInt/CoreProcessSample/Windows-ARM64-TWMetricsOnly",
            "installRoot": "${env.TWWorkspaceHome}/TWBuilds/TWInt/CoreProcessSample/Windows-ARM64-TWMetricsOnly/install"
        },
        {
            "name": "Windows-ARM64-TWSimulation",
            "generator": "Ninja",
            "configurationType": "Debug",
            "inheritEnvironments": [ "clang_cl_arm64" ],
            "cmakeCommandArgs": "",
            "buildCommandArgs": "",
            "ctestCommandArgs": "",
            "variables": [
                {
                    "name": "CMAKE_CXX_COMPILER",
                    "value": "${env.LLVMInstallDir}/bin/clang-cl.exe",
                    "type": "FILEPATH"
                },
                {
                    "name": "CMAKE_AR",
                    "value": "${env.LLVMInstallDir}/bin/clang-lib.exe",
                    "type": "FILEPATH"
                },
                {
                    "name": "CMAKE_LINKER",
                    "value": "${env.LLVMInstallDir}/bin/lld-link.exe",
                    "type": "FILEPATH"
                },
                {
                    "name": "TW_BUILD_OS",
                    "value": "Windows",
                    "type": "STRING"
                },
                {
                    "name": "TW_BUILD_CONFIG",
                    "value": "TWSimulation",
                    "type": "STRING"
                },
                {
                    "name": "TW_BUILD_ARCH",
                    "value": "ARM64",
                    "type": "STRING"
                },
                {
                    "name": "TW_IS_TEST",
                    "value": "False",
                    "type": "STRING"
                },
                {
                    "name": "TW_TEST_FRAMEWORK",
                    "value": "",
                    "type": "STRING"
                }
            ],
            "clangTidyChecks": "-*, bugprone-bad-signal-to-kill-thread, bugprone-bool-pointer-implicit-conversion, bugprone-branch-clone, bugprone-copy-constructor-init, bugprone-dangling-handle, bugprone-dynamic-static-initializers, bugprone-exception-escape, bugprone-forward-declaration-namespace, bugprone-forwarding-reference-overload, bugprone-incorrect-roundings, bugprone-infinite-loop, bugprone-integer-division, bugprone-macro-parentheses, bugprone-macro-repeated-side-effects, bugprone-misplaced-operator-in-strlen-in-alloc, bugprone-misplaced-pointer-arithmetic-in-alloc, bugprone-misplaced-widening-cast, bugprone-move-forwarding-reference, bugprone-multiple-statement-macro, bugprone-not-null-terminated-result, bugprone-parent-virtual-call, bugprone-posix-return, bugprone-reserved-identifier, bugprone-signed-char-misuse, bugprone-sizeof-expression, bugprone-spuriously-wake-up-functions (cert-con36-c), bugprone-string-literal-with-embedded-nul, bugprone-suspicious-enum-usage, bugprone-suspicious-include, bugprone-suspicious-memset-usage, bugprone-suspicious-missing-comma, bugprone-suspicious-semicolon, bugprone-suspicious-string-compare, bugprone-swapped-arguments, bugprone-terminating-continue, bugprone-too-small-loop-variable, bugprone-undefined-memory-manipulation, bugprone-undelegated-constructor, bugprone-unhandled-self-assignment (cert-oop54-cpp), bugprone-unused-raii, bugprone-use-after-move, cert-dcl21-cpp, cert-dcl50-cpp, cert-err34-c, cert-err58-cpp, cert-flp30-c, cert-mem57-cpp, cert-msc50-cpp, cert-msc51-cpp, cert-oop57-cpp, cert-oop58-cpp, clang-analyzer-core.DivideZero, clang-analyzer-core.NonNullParamChecker, clang-analyzer-core.NullDereference, clang-analyzer-core.StackAddressEscape, clang-analyzer-core.UndefinedBinaryOperatorResult, clang-analyzer-core.VLASize, clang-analyzer-core.uninitialized.ArraySubscript, clang-analyzer-core.uninitialized.Assign, clang-analyzer-core.uninitialized.Branch, clang-analyzer-core.uninitialized.CapturedBlockVariable, clang-analyzer-core.uninitialized.UndefReturn, clang-analyzer-cplusplus.InnerPointer, clang-analyzer-cplusplus.NewDelete, clang-analyzer-cplusplus.NewDeleteLeaks, clang-analyzer-deadcode.DeadStores, clang-analyzer-optin.performance.Padding, clang-analyzer-optin.portability.UnixAPI, clang-analyzer-valist.CopyToSelf, clang-analyzer-valist.Uninitialized, clang-analyzer-valist.Unterminated, clang-analyzer-security.FloatLoopCounter, clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling, clang-analyzer-core.CallAndMessage, clang-analyzer-optin.cplusplus.UninitializedObject, clang-analyzer-optin.cplusplus.VirtualCall, clang-analyzer-security.insecureAPI.UncheckedReturn, clang-analyzer-security.insecureAPI.bcmp, clang-analyzer-security.insecureAPI.bcopy, clang-analyzer-security.insecureAPI.bzero, clang-analyzer-security.insecureAPI.getpw, clang-analyzer-security.insecureAPI.gets, clang-analyzer-security.insecureAPI.mkstemp, clang-analyzer-security.insecureAPI.mktemp, clang-analyzer-security.insecureAPI.rand, clang-analyzer-security.insecureAPI.strcpy, clang-analyzer-security.insecureAPI.vfork, clang-analyzer-unix.API, clang-analyzer-unix.Malloc, clang-analyzer-unix.MallocSizeof, clang-analyzer-unix.MismatchedDeallocator, clang-analyzer-unix.Vfork, clang-analyzer-unix.cstring.BadSizeArg, clang-analyzer-unix.cstring.NullArg, cppcoreguidelines-avoid-non-const-global-variables, cppcoreguidelines-avoid-goto, cppcoreguidelines-interfaces-global-init, cppcoreguidelines-macro-usage, cppcoreguidelines-narrowing-conversions, cppcoreguidelines-no-malloc, cppcoreguidelines-pro-type-const-cast, cppcoreguidelines-pro-type-member-init, cppcoreguidelines-pro-type-reinterpret-cast, cppcoreguidelines-pro-type-static-cast-downcast, cppcoreguidelines-pro-type-vararg, cppcoreguidelines-slicing, cppcoreguidelines-special-member-functions, fuchsia-statically-constructed-objects, google-default-arguments, google-explicit-constructor, google-runtime-int, google-runtime-operator, google-upgrade-googletest-case, hicpp-avoid-goto, hicpp-multiway-paths-covered, hicpp-signed-bitwise, llvm-header-guard, misc-definitions-in-headers, misc-misplaced-const, misc-new-delete-overloads, misc-non-copyable-objects, misc-no-recursion, misc-redundant-expression, misc-static-assert, misc-unconventional-assign-operator, misc-unused-alias-decls, misc-unused-parameters, misc-unused-using-decls, modernize-deprecated-headers, modernize-pass-by-value, modernize-raw-string-literal, modernize-redundant-void-arg, modernize-return-braced-init-list, modernize-unary-static-assert, modernize-use-bool-literals, modernize-use-default-member-init, modernize-use-equals-default, modernize-use-equals-delete, modernize-use-noexcept, modernize-use-nullptr, modernize-use-override, performance-implicit-conversion-in-loop, performance-move-const-arg, performance-move-constructor-init, performance-no-automatic-move, performance-noexcept-move-constructor, performance-trivially-destructible, performance-unnecessary-copy-initialization, performance-unnecessary-value-param, readability-it-bool-conversion, readability-avoid-const-params-in-decls, readability-const-return-type, readability-convert-member-functions-to-static, readability-deleted-default, readability-delete-null-pointer, readability-else-after-return, readability-function-size, readability-inconsistent-declaration-parameter-name, readability-isolate-declaration, readability-make-member-function-const, readability-misplaced-array-index, readability-named-parameter, readability-non-const-parameter, readability-qualified-auto, readability-redundant-access-specifiers, readability-redundant-control-flow, readability-redundant-declaration, readability-redundant-function-ptr-dereference, readability-redundant-member-init, readability-redundant-preprocessor, readability-simplify-boolean-expr, readability-simplify-subscript-expr, readability-static-accessed-through-instance, readability-static-definition-in-anonymous-namespace",
            "buildRoot": "${env.TWWorkspaceHome}/TWBuilds/TWInt/CoreProcessSample/Windows-ARM64-TWSimulation",
            "installRoot": "${env.TWWorkspaceHome}/TWBuilds/TWInt/CoreProcessSample/Windows-ARM64-TWSimulation/install"
        },
        {
            "name": "Windows-ARM64-TWRelease",
            "generator": "Ninja",
            "configurationType": "Release",
            "inheritEnvironments": [ "clang_cl_arm64" ],
            "cmakeCommandArgs": "",
            "buildCommandArgs": "",
            "ctestCommandArgs": "",
            "variables": [
                {
                    "name": "CMAKE_CXX_COMPILER",
                    "value": "${env.LLVMInstallDir}/bin/clang-cl.exe",
                    "type": "FILEPATH"
                },
                {
                    "name": "CMAKE_AR",
                    "value": "${env.LLVMInstallDir}/bin/clang-lib.exe",
                    "type": "FILEPATH"
                },
                {
                    "name": "CMAKE_LINKER",
                    "value": "${env.LLVMInstallDir}/bin/lld-link.exe",
                    "type": "FILEPATH"
                },
                {
                    "name": "TW_BUILD_OS",
                    "value": "Windows",
                    "type": "STRING"
                },
                {
                    "name": "TW_BUILD_CONFIG",
                    "value": "TWRelease",
                    "type": "STRING"
                },
                {
                    "name": "TW_BUILD_ARCH",
                    "value": "ARM64",
                    "type": "STRING"
                },
                {
                    "name": "TW_IS_TEST",
                    "value": "False",
                    "type": "STRING"
                },
                {
                    "name": "TW_TEST_FRAMEWORK",
                    "value": "",
                    "type": "STRING"
                }
            ],
            "clangTidyChecks": "-*, bugprone-bad-signal-to-kill-thread, bugprone-bool-pointer-implicit-conversion, bugprone-branch-clone, bugprone-copy-constructor-init, bugprone-dangling-handle, bugprone-dynamic-static-initializers, bugprone-exception-escape, bugprone-forward-declaration-namespace, bugprone-forwarding-reference-overload, bugprone-incorrect-roundings, bugprone-infinite-loop, bugprone-integer-division, bugprone-macro-parentheses, bugprone-macro-repeated-side-effects, bugprone-misplaced-operator-in-strlen-in-alloc, bugprone-misplaced-pointer-arithmetic-in-alloc, bugprone-misplaced-widening-cast, bugprone-move-forwarding-reference, bugprone-multiple-statement-macro, bugprone-not-null-terminated-result, bugprone-parent-virtual-call, bugprone-posix-return, bugprone-reserved-identifier, bugprone-signed-char-misuse, bugprone-sizeof-expression, bugprone-spuriously-wake-up-functions (cert-con36-c), bugprone-string-literal-with-embedded-nul, bugprone-suspicious-enum-usage, bugprone-suspicious-include, bugprone-suspicious-memset-usage, bugprone-suspicious-missing-comma, bugprone-suspicious-semicolon, bugprone-suspicious-string-compare, bugprone-swapped-arguments, bugprone-terminating-continue, bugprone-too-small-loop-variable, bugprone-undefined-memory-manipulation, bugprone-undelegated-constructor, bugprone-unhandled-self-assignment (cert-oop54-cpp), bugprone-unused-raii, bugprone-use-after-move, cert-dcl21-cpp, cert-dcl50-cpp, cert-err34-c, cert-err58-cpp, cert-flp30-c, cert-mem57-cpp, cert-msc50-cpp, cert-msc51-cpp, cert-oop57-cpp, cert-oop58-cpp, clang-analyzer-core.DivideZero, clang-analyzer-core.NonNullParamChecker, clang-analyzer-core.NullDereference, clang-analyzer-core.StackAddressEscape, clang-analyzer-core.UndefinedBinaryOperatorResult, clang-analyzer-core.VLASize, clang-analyzer-core.uninitialized.ArraySubscript, clang-analyzer-core.uninitialized.Assign, clang-analyzer-core.uninitialized.Branch, clang-analyzer-core.uninitialized.CapturedBlockVariable, clang-analyzer-core.uninitialized.UndefReturn, clang-analyzer-cplusplus.InnerPointer, clang-analyzer-cplusplus.NewDelete, clang-analyzer-cplusplus.NewDeleteLeaks, clang-analyzer-deadcode.DeadStores, clang-analyzer-optin.performance.Padding, clang-analyzer-optin.portability.UnixAPI, clang-analyzer-valist.CopyToSelf, clang-analyzer-valist.Uninitialized, clang-analyzer-valist.Unterminated, clang-analyzer-security.FloatLoopCounter, clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling, clang-analyzer-core.CallAndMessage, clang-analyzer-optin.cplusplus.UninitializedObject, clang-analyzer-optin.cplusplus.VirtualCall, clang-analyzer-security.insecureAPI.UncheckedReturn, clang-analyzer-security.insecureAPI.bcmp, clang-analyzer-security.insecureAPI.bcopy, clang-analyzer-security.insecureAPI.bzero, clang-analyzer-security.insecureAPI.getpw, clang-analyzer-security.insecureAPI.gets, clang-analyzer-security.insecureAPI.mkstemp, clang-analyzer-security.insecureAPI.mktemp, clang-analyzer-security.insecureAPI.rand, clang-analyzer-security.insecureAPI.strcpy, clang-analyzer-security.insecureAPI.vfork, clang-analyzer-unix.API, clang-analyzer-unix.Malloc, clang-analyzer-unix.MallocSizeof, clang-analyzer-unix.MismatchedDeallocator, clang-analyzer-unix.Vfork, clang-analyzer-unix.cstring.BadSizeArg, clang-analyzer-unix.cstring.NullArg, cppcoreguidelines-avoid-non-const-global-variables, cppcoreguidelines-avoid-goto, cppcoreguidelines-interfaces-global-init, cppcoreguidelines-macro-usage, cppcoreguidelines-narrowing-conversions, cppcoreguidelines-no-malloc, cppcoreguidelines-pro-type-const-cast, cppcoreguidelines-pro-type-member-init, cppcoreguidelines-pro-type-reinterpret-cast, cppcoreguidelines-pro-type-static-cast-downcast, cppcoreguidelines-pro-type-vararg, cppcoreguidelines-slicing, cppcoreguidelines-special-member-functions, fuchsia-statically-constructed-objects, google-default-arguments, google-explicit-constructor, google-runtime-int, google-runtime-operator, google-upgrade-googletest-case, hicpp-avoid-goto, hicpp-multiway-paths-covered, hicpp-signed-bitwise, llvm-header-guard, misc-definitions-in-headers, misc-misplaced-const, misc-new-delete-overloads, misc-non-copyable-objects, misc-no-recursion, misc-redundant-expression, misc-static-assert, misc-unconventional-assign-operator, misc-unused-alias-decls, misc-unused-parameters, misc-unused-using-decls, modernize-deprecated-headers, modernize-pass-by-value, modernize-raw-string-literal, modernize-redundant-void-arg, modernize-return-braced-init-list, modernize-unary-static-assert, modernize-use-bool-literals, modernize-use-default-member-init, modernize-use-equals-default, modernize-use-equals-delete, modernize-use-noexcept, modernize-use-nullptr, modernize-use-override, performance-implicit-conversion-in-loop, performance-move-const-arg, performance-move-constructor-init, performance-no-automatic-move, performance-noexcept-move-constructor, performance-trivially-destructible, performance-unnecessary-copy-initialization, performance-unnecessary-value-param, readability-it-bool-conversion, readability-avoid-const-params-in-decls, readability-const-return-type, readability-convert-member-functions-to-static, readability-deleted-default, readability-delete-null-pointer, readability-else-after-return, readability-function-size, readability-inconsistent-declaration-parameter-name, readability-isolate-declaration, readability-make-member-function-const, readability-misplaced-array-index, readability-named-parameter, readability-non-const-parameter, readability-qualified-auto, readability-redundant-access-specifiers, readability-redundant-control-flow, readability-redundant-declaration, readability-redundant-function-ptr-dereference, readability-redundant-member-init, readability-redundant-preprocessor, readability-simplify-boolean-expr, readability-simplify-subscript-expr, readability-static-accessed-through-instance, readability-static-definition-in-anonymous-namespace",
            "buildRoot": "${env.TWWorkspaceHome}/TWBuilds/TWInt/CoreProcessSample/Windows-ARM64-TWRelease",
            "installRoot": "${env.TWWorkspaceHome}/TWBuilds/TWInt/CoreProcessSample/Windows-ARM64-TWRelease/install"
        },
        {
            "name": "Linux-x64-TWDebug",
            "generator": "Ninja",
            "configurationType": "Debug",
            "inheritEnvironments": [ "linux_clang_x64" ],
            "cmakeCommandArgs": "--log-level=NOTICE",
            "buildCommandArgs": "--log-level=NOTICE",
            "ctestCommandArgs": "--log-level=NOTICE",
            "variables": [
                {
                    "name": "TW_BUILD_OS",
                    "value": "Linux",
                    "type": "STRING"
                },
                {
                    "name": "TW_BUILD_CONFIG",
                    "value": "TWDebug",
                    "type": "STRING"
                },
                {
                    "name": "TW_BUILD_ARCH",
                    "value": "x64",
                    "type": "STRING"
                },
                {
                    "name": "TW_IS_TEST",
                    "value": "False",
                    "type": "STRING"
                },
                {
                    "name": "TW_TEST_FRAMEWORK",
                    "value": "",
                    "type": "STRING"
                }
            ],
            "clangTidyChecks": "-*, bugprone-bad-signal-to-kill-thread, bugprone-bool-pointer-implicit-conversion, bugprone-branch-clone, bugprone-copy-constructor-init, bugprone-dangling-handle, bugprone-dynamic-static-initializers, bugprone-exception-escape, bugprone-forward-declaration-namespace, bugprone-forwarding-reference-overload, bugprone-incorrect-roundings, bugprone-infinite-loop, bugprone-integer-division, bugprone-macro-parentheses, bugprone-macro-repeated-side-effects, bugprone-misplaced-operator-in-strlen-in-alloc, bugprone-misplaced-pointer-arithmetic-in-alloc, bugprone-misplaced-widening-cast, bugprone-move-forwarding-reference, bugprone-multiple-statement-macro, bugprone-not-null-terminated-result, bugprone-parent-virtual-call, bugprone-posix-return, bugprone-reserved-identifier, bugprone-signed-char-misuse, bugprone-sizeof-expression, bugprone-spuriously-wake-up-functions (cert-con36-c), bugprone-string-literal-with-embedded-nul, bugprone-suspicious-enum-usage, bugprone-suspicious-include, bugprone-suspicious-memset-usage, bugprone-suspicious-missing-comma, bugprone-suspicious-semicolon, bugprone-suspicious-string-compare, bugprone-swapped-arguments, bugprone-terminating-continue, bugprone-too-small-loop-variable, bugprone-undefined-memory-manipulation, bugprone-undelegated-constructor, bugprone-unhandled-self-assignment (cert-oop54-cpp), bugprone-unused-raii, bugprone-use-after-move, cert-dcl21-cpp, cert-dcl50-cpp, cert-err34-c, cert-err58-cpp, cert-flp30-c, cert-mem57-cpp, cert-msc50-cpp, cert-msc51-cpp, cert-oop57-cpp, cert-oop58-cpp, clang-analyzer-core.DivideZero, clang-analyzer-core.NonNullParamChecker, clang-analyzer-core.NullDereference, clang-analyzer-core.StackAddressEscape, clang-analyzer-core.UndefinedBinaryOperatorResult, clang-analyzer-core.VLASize, clang-analyzer-core.uninitialized.ArraySubscript, clang-analyzer-core.uninitialized.Assign, clang-analyzer-core.uninitialized.Branch, clang-analyzer-core.uninitialized.CapturedBlockVariable, clang-analyzer-core.uninitialized.UndefReturn, clang-analyzer-cplusplus.InnerPointer, clang-analyzer-cplusplus.NewDelete, clang-analyzer-cplusplus.NewDeleteLeaks, clang-analyzer-deadcode.DeadStores, clang-analyzer-optin.performance.Padding, clang-analyzer-optin.portability.UnixAPI, clang-analyzer-valist.CopyToSelf, clang-analyzer-valist.Uninitialized, clang-analyzer-valist.Unterminated, clang-analyzer-security.FloatLoopCounter, clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling, clang-analyzer-core.CallAndMessage, clang-analyzer-optin.cplusplus.UninitializedObject, clang-analyzer-optin.cplusplus.VirtualCall, clang-analyzer-security.insecureAPI.UncheckedReturn, clang-analyzer-security.insecureAPI.bcmp, clang-analyzer-security.insecureAPI.bcopy, clang-analyzer-security.insecureAPI.bzero, clang-analyzer-security.insecureAPI.getpw, clang-analyzer-security.insecureAPI.gets, clang-analyzer-security.insecureAPI.mkstemp, clang-analyzer-security.insecureAPI.mktemp, clang-analyzer-security.insecureAPI.rand, clang-analyzer-security.insecureAPI.strcpy, clang-analyzer-security.insecureAPI.vfork, clang-analyzer-unix.API, clang-analyzer-unix.Malloc, clang-analyzer-unix.MallocSizeof, clang-analyzer-unix.MismatchedDeallocator, clang-analyzer-unix.Vfork, clang-analyzer-unix.cstring.BadSizeArg, clang-analyzer-unix.cstring.NullArg, cppcoreguidelines-avoid-non-const-global-variables, cppcoreguidelines-avoid-goto, cppcoreguidelines-interfaces-global-init, cppcoreguidelines-macro-usage, cppcoreguidelines-narrowing-conversions, cppcoreguidelines-no-malloc, cppcoreguidelines-pro-type-const-cast, cppcoreguidelines-pro-type-member-init, cppcoreguidelines-pro-type-reinterpret-cast, cppcoreguidelines-pro-type-static-cast-downcast, cppcoreguidelines-pro-type-vararg, cppcoreguidelines-slicing, cppcoreguidelines-special-member-functions, fuchsia-statically-constructed-objects, google-default-arguments, google-explicit-constructor, google-runtime-int, google-runtime-operator, google-upgrade-googletest-case, hicpp-avoid-goto, hicpp-multiway-paths-covered, hicpp-signed-bitwise, llvm-header-guard, misc-definitions-in-headers, misc-misplaced-const, misc-new-delete-overloads, misc-non-copyable-objects, misc-no-recursion, misc-redundant-expression, misc-static-assert, misc-unconventional-assign-operator, misc-unused-alias-decls, misc-unused-parameters, misc-unused-using-decls, modernize-deprecated-headers, modernize-pass-by-value, modernize-raw-string-literal, modernize-redundant-void-arg, modernize-return-braced-init-list, modernize-unary-static-assert, modernize-use-bool-literals, modernize-use-default-member-init, modernize-use-equals-default, modernize-use-equals-delete, modernize-use-noexcept, modernize-use-nullptr, modernize-use-override, performance-implicit-conversion-in-loop, performance-move-const-arg, performance-move-constructor-init, performance-no-automatic-move, performance-noexcept-move-constructor, performance-trivially-destructible, performance-unnecessary-copy-initialization, performance-unnecessary-value-param, readability-it-bool-conversion, readability-avoid-const-params-in-decls, readability-const-return-type, readability-convert-member-functions-to-static, readability-deleted-default, readability-delete-null-pointer, readability-else-after-return, readability-function-size, readability-inconsistent-declaration-parameter-name, readability-isolate-declaration, readability-make-member-function-const, readability-misplaced-array-index, readability-named-parameter, readability-non-const-parameter, readability-qualified-auto, readability-redundant-access-specifiers, readability-redundant-control-flow, readability-redundant-declaration, readability-redundant-function-ptr-dereference, readability-redundant-member-init, readability-redundant-preprocessor, readability-simplify-boolean-expr, readability-simplify-subscript-expr, readability-static-accessed-through-instance, readability-static-definition-in-anonymous-namespace",
            "buildRoot": "${env.TWWorkspaceHome}/TWBuilds/TWInt/CoreProcessSample/Linux-x64-TWDebug",
            "installRoot": "${env.TWWorkspaceHome}/TWBuilds/TWInt/CoreProcessSample/Linux-x64-TWDebug/install",
            "cmakeExecutable": "/usr/bin/cmake",
            "remoteCopySourcesExclusionList": [ ".vs", ".git", "out" ],
            "remoteMachineName": "127.0.0.1",
            "remoteCMakeListsRoot": "$TWWorkspaceHomeDrive",
            "remoteBuildRoot": "$TWWorkspaceHome/TWBuilds/TWInt/CoreProcessSample/Linux-x64-TWDebug",
            "remoteInstallRoot": "$TWWorkspaceHome/TWBuilds/TWInt/CoreProcessSample/Linux-x64-TWDebug/install",
            "remoteCopySources": false,
            "rsyncCommandArgs": "-t --delete --delete-excluded",
            "remoteCopyBuildOutput": false,
            "remoteCopySourcesMethod": "rsync",
            "addressSanitizerRuntimeFlags": "detect_leaks=0",
            "remoteCopySourcesOutputVerbosity": "Normal",
            "remoteCopySourcesConcurrentCopies": "10",
            "remotePreGenerateCommand": "$TWWorkspaceHome/TallyWorldPMT/TallyWorld/TWPMT.VSSetup/Wizard/Remote/PreGenerate.sh",
            "remotePrebuildCommand": "$TWWorkspaceHome/TallyWorldPMT/TallyWorld/TWPMT.VSSetup/Wizard/Remote/Prebuild.sh",
            "remotePostbuildCommand": "$TWWorkspaceHome/TallyWorldPMT/TallyWorld/TWPMT.VSSetup/Wizard/Remote/Postbuild.sh"
        },
        {
            "name": "Linux-x64-TWMetricsOnly",
            "generator": "Ninja",
            "configurationType": "Debug",
            "inheritEnvironments": [ "linux_clang_x64" ],
            "cmakeCommandArgs": "",
            "buildCommandArgs": "",
            "ctestCommandArgs": "",
            "variables": [
                {
                    "name": "TW_BUILD_OS",
                    "value": "Linux",
                    "type": "STRING"
                },
                {
                    "name": "TW_BUILD_CONFIG",
                    "value": "TWMetricsOnly",
                    "type": "STRING"
                },
                {
                    "name": "TW_BUILD_ARCH",
                    "value": "x64",
                    "type": "STRING"
                },
                {
                    "name": "TW_IS_TEST",
                    "value": "False",
                    "type": "STRING"
                },
                {
                    "name": "TW_TEST_FRAMEWORK",
                    "value": "",
                    "type": "STRING"
                }
            ],
            "clangTidyChecks": "-*, bugprone-bad-signal-to-kill-thread, bugprone-bool-pointer-implicit-conversion, bugprone-branch-clone, bugprone-copy-constructor-init, bugprone-dangling-handle, bugprone-dynamic-static-initializers, bugprone-exception-escape, bugprone-forward-declaration-namespace, bugprone-forwarding-reference-overload, bugprone-incorrect-roundings, bugprone-infinite-loop, bugprone-integer-division, bugprone-macro-parentheses, bugprone-macro-repeated-side-effects, bugprone-misplaced-operator-in-strlen-in-alloc, bugprone-misplaced-pointer-arithmetic-in-alloc, bugprone-misplaced-widening-cast, bugprone-move-forwarding-reference, bugprone-multiple-statement-macro, bugprone-not-null-terminated-result, bugprone-parent-virtual-call, bugprone-posix-return, bugprone-reserved-identifier, bugprone-signed-char-misuse, bugprone-sizeof-expression, bugprone-spuriously-wake-up-functions (cert-con36-c), bugprone-string-literal-with-embedded-nul, bugprone-suspicious-enum-usage, bugprone-suspicious-include, bugprone-suspicious-memset-usage, bugprone-suspicious-missing-comma, bugprone-suspicious-semicolon, bugprone-suspicious-string-compare, bugprone-swapped-arguments, bugprone-terminating-continue, bugprone-too-small-loop-variable, bugprone-undefined-memory-manipulation, bugprone-undelegated-constructor, bugprone-unhandled-self-assignment (cert-oop54-cpp), bugprone-unused-raii, bugprone-use-after-move, cert-dcl21-cpp, cert-dcl50-cpp, cert-err34-c, cert-err58-cpp, cert-flp30-c, cert-mem57-cpp, cert-msc50-cpp, cert-msc51-cpp, cert-oop57-cpp, cert-oop58-cpp, clang-analyzer-core.DivideZero, clang-analyzer-core.NonNullParamChecker, clang-analyzer-core.NullDereference, clang-analyzer-core.StackAddressEscape, clang-analyzer-core.UndefinedBinaryOperatorResult, clang-analyzer-core.VLASize, clang-analyzer-core.uninitialized.ArraySubscript, clang-analyzer-core.uninitialized.Assign, clang-analyzer-core.uninitialized.Branch, clang-analyzer-core.uninitialized.CapturedBlockVariable, clang-analyzer-core.uninitialized.UndefReturn, clang-analyzer-cplusplus.InnerPointer, clang-analyzer-cplusplus.NewDelete, clang-analyzer-cplusplus.NewDeleteLeaks, clang-analyzer-deadcode.DeadStores, clang-analyzer-optin.performance.Padding, clang-analyzer-optin.portability.UnixAPI, clang-analyzer-valist.CopyToSelf, clang-analyzer-valist.Uninitialized, clang-analyzer-valist.Unterminated, clang-analyzer-security.FloatLoopCounter, clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling, clang-analyzer-core.CallAndMessage, clang-analyzer-optin.cplusplus.UninitializedObject, clang-analyzer-optin.cplusplus.VirtualCall, clang-analyzer-security.insecureAPI.UncheckedReturn, clang-analyzer-security.insecureAPI.bcmp, clang-analyzer-security.insecureAPI.bcopy, clang-analyzer-security.insecureAPI.bzero, clang-analyzer-security.insecureAPI.getpw, clang-analyzer-security.insecureAPI.gets, clang-analyzer-security.insecureAPI.mkstemp, clang-analyzer-security.insecureAPI.mktemp, clang-analyzer-security.insecureAPI.rand, clang-analyzer-security.insecureAPI.strcpy, clang-analyzer-security.insecureAPI.vfork, clang-analyzer-unix.API, clang-analyzer-unix.Malloc, clang-analyzer-unix.MallocSizeof, clang-analyzer-unix.MismatchedDeallocator, clang-analyzer-unix.Vfork, clang-analyzer-unix.cstring.BadSizeArg, clang-analyzer-unix.cstring.NullArg, cppcoreguidelines-avoid-non-const-global-variables, cppcoreguidelines-avoid-goto, cppcoreguidelines-interfaces-global-init, cppcoreguidelines-macro-usage, cppcoreguidelines-narrowing-conversions, cppcoreguidelines-no-malloc, cppcoreguidelines-pro-type-const-cast, cppcoreguidelines-pro-type-member-init, cppcoreguidelines-pro-type-reinterpret-cast, cppcoreguidelines-pro-type-static-cast-downcast, cppcoreguidelines-pro-type-vararg, cppcoreguidelines-slicing, cppcoreguidelines-special-member-functions, fuchsia-statically-constructed-objects, google-default-arguments, google-explicit-constructor, google-runtime-int, google-runtime-operator, google-upgrade-googletest-case, hicpp-avoid-goto, hicpp-multiway-paths-covered, hicpp-signed-bitwise, llvm-header-guard, misc-definitions-in-headers, misc-misplaced-const, misc-new-delete-overloads, misc-non-copyable-objects, misc-no-recursion, misc-redundant-expression, misc-static-assert, misc-unconventional-assign-operator, misc-unused-alias-decls, misc-unused-parameters, misc-unused-using-decls, modernize-deprecated-headers, modernize-pass-by-value, modernize-raw-string-literal, modernize-redundant-void-arg, modernize-return-braced-init-list, modernize-unary-static-assert, modernize-use-bool-literals, modernize-use-default-member-init, modernize-use-equals-default, modernize-use-equals-delete, modernize-use-noexcept, modernize-use-nullptr, modernize-use-override, performance-implicit-conversion-in-loop, performance-move-const-arg, performance-move-constructor-init, performance-no-automatic-move, performance-noexcept-move-constructor, performance-trivially-destructible, performance-unnecessary-copy-initialization, performance-unnecessary-value-param, readability-it-bool-conversion, readability-avoid-const-params-in-decls, readability-const-return-type, readability-convert-member-functions-to-static, readability-deleted-default, readability-delete-null-pointer, readability-else-after-return, readability-function-size, readability-inconsistent-declaration-parameter-name, readability-isolate-declaration, readability-make-member-function-const, readability-misplaced-array-index, readability-named-parameter, readability-non-const-parameter, readability-qualified-auto, readability-redundant-access-specifiers, readability-redundant-control-flow, readability-redundant-declaration, readability-redundant-function-ptr-dereference, readability-redundant-member-init, readability-redundant-preprocessor, readability-simplify-boolean-expr, readability-simplify-subscript-expr, readability-static-accessed-through-instance, readability-static-definition-in-anonymous-namespace",
            "buildRoot": "${env.TWWorkspaceHome}/TWBuilds/TWInt/CoreProcessSample/Linux-x64-TWMetricsOnly",
            "installRoot": "${env.TWWorkspaceHome}/TWBuilds/TWInt/CoreProcessSample/Linux-x64-TWMetricsOnly/install",
            "cmakeExecutable": "/usr/bin/cmake",
            "remoteCopySourcesExclusionList": [ ".vs", ".git", "out" ],
            "remoteMachineName": "127.0.0.1",
            "remoteCMakeListsRoot": "$TWWorkspaceHomeDrive",
            "remoteBuildRoot": "$TWWorkspaceHome/TWBuilds/TWInt/CoreProcessSample/Linux-x64-TWMetricsOnly",
            "remoteInstallRoot": "$TWWorkspaceHome/TWBuilds/TWInt/CoreProcessSample/Linux-x64-TWMetricsOnly/install",
            "remoteCopySources": false,
            "rsyncCommandArgs": "-t --delete --delete-excluded",
            "remoteCopyBuildOutput": false,
            "remoteCopySourcesMethod": "rsync",
            "addressSanitizerRuntimeFlags": "detect_leaks=0",
            "remoteCopySourcesOutputVerbosity": "Normal",
            "remoteCopySourcesConcurrentCopies": "10",
            "remotePreGenerateCommand": "$TWWorkspaceHome/TallyWorldPMT/TallyWorld/TWPMT.VSSetup/Wizard/Remote/PreGenerate.sh",
            "remotePrebuildCommand": "$TWWorkspaceHome/TallyWorldPMT/TallyWorld/TWPMT.VSSetup/Wizard/Remote/Prebuild.sh",
            "remotePostbuildCommand": "$TWWorkspaceHome/TallyWorldPMT/TallyWorld/TWPMT.VSSetup/Wizard/Remote/Postbuild.sh"
        },
        {
            "name": "Linux-x64-TWSimulation",
            "generator": "Ninja",
            "configurationType": "Debug",
            "inheritEnvironments": [ "linux_clang_x64" ],
            "cmakeCommandArgs": "",
            "buildCommandArgs": "",
            "ctestCommandArgs": "",
            "variables": [
                {
                    "name": "TW_BUILD_OS",
                    "value": "Linux",
                    "type": "STRING"
                },
                {
                    "name": "TW_BUILD_CONFIG",
                    "value": "TWSimulation",
                    "type": "STRING"
                },
                {
                    "name": "TW_BUILD_ARCH",
                    "value": "x64",
                    "type": "STRING"
                },
                {
                    "name": "TW_IS_TEST",
                    "value": "False",
                    "type": "STRING"
                },
                {
                    "name": "TW_TEST_FRAMEWORK",
                    "value": "",
                    "type": "STRING"
                }
            ],
            "clangTidyChecks": "-*, bugprone-bad-signal-to-kill-thread, bugprone-bool-pointer-implicit-conversion, bugprone-branch-clone, bugprone-copy-constructor-init, bugprone-dangling-handle, bugprone-dynamic-static-initializers, bugprone-exception-escape, bugprone-forward-declaration-namespace, bugprone-forwarding-reference-overload, bugprone-incorrect-roundings, bugprone-infinite-loop, bugprone-integer-division, bugprone-macro-parentheses, bugprone-macro-repeated-side-effects, bugprone-misplaced-operator-in-strlen-in-alloc, bugprone-misplaced-pointer-arithmetic-in-alloc, bugprone-misplaced-widening-cast, bugprone-move-forwarding-reference, bugprone-multiple-statement-macro, bugprone-not-null-terminated-result, bugprone-parent-virtual-call, bugprone-posix-return, bugprone-reserved-identifier, bugprone-signed-char-misuse, bugprone-sizeof-expression, bugprone-spuriously-wake-up-functions (cert-con36-c), bugprone-string-literal-with-embedded-nul, bugprone-suspicious-enum-usage, bugprone-suspicious-include, bugprone-suspicious-memset-usage, bugprone-suspicious-missing-comma, bugprone-suspicious-semicolon, bugprone-suspicious-string-compare, bugprone-swapped-arguments, bugprone-terminating-continue, bugprone-too-small-loop-variable, bugprone-undefined-memory-manipulation, bugprone-undelegated-constructor, bugprone-unhandled-self-assignment (cert-oop54-cpp), bugprone-unused-raii, bugprone-use-after-move, cert-dcl21-cpp, cert-dcl50-cpp, cert-err34-c, cert-err58-cpp, cert-flp30-c, cert-mem57-cpp, cert-msc50-cpp, cert-msc51-cpp, cert-oop57-cpp, cert-oop58-cpp, clang-analyzer-core.DivideZero, clang-analyzer-core.NonNullParamChecker, clang-analyzer-core.NullDereference, clang-analyzer-core.StackAddressEscape, clang-analyzer-core.UndefinedBinaryOperatorResult, clang-analyzer-core.VLASize, clang-analyzer-core.uninitialized.ArraySubscript, clang-analyzer-core.uninitialized.Assign, clang-analyzer-core.uninitialized.Branch, clang-analyzer-core.uninitialized.CapturedBlockVariable, clang-analyzer-core.uninitialized.UndefReturn, clang-analyzer-cplusplus.InnerPointer, clang-analyzer-cplusplus.NewDelete, clang-analyzer-cplusplus.NewDeleteLeaks, clang-analyzer-deadcode.DeadStores, clang-analyzer-optin.performance.Padding, clang-analyzer-optin.portability.UnixAPI, clang-analyzer-valist.CopyToSelf, clang-analyzer-valist.Uninitialized, clang-analyzer-valist.Unterminated, clang-analyzer-security.FloatLoopCounter, clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling, clang-analyzer-core.CallAndMessage, clang-analyzer-optin.cplusplus.UninitializedObject, clang-analyzer-optin.cplusplus.VirtualCall, clang-analyzer-security.insecureAPI.UncheckedReturn, clang-analyzer-security.insecureAPI.bcmp, clang-analyzer-security.insecureAPI.bcopy, clang-analyzer-security.insecureAPI.bzero, clang-analyzer-security.insecureAPI.getpw, clang-analyzer-security.insecureAPI.gets, clang-analyzer-security.insecureAPI.mkstemp, clang-analyzer-security.insecureAPI.mktemp, clang-analyzer-security.insecureAPI.rand, clang-analyzer-security.insecureAPI.strcpy, clang-analyzer-security.insecureAPI.vfork, clang-analyzer-unix.API, clang-analyzer-unix.Malloc, clang-analyzer-unix.MallocSizeof, clang-analyzer-unix.MismatchedDeallocator, clang-analyzer-unix.Vfork, clang-analyzer-unix.cstring.BadSizeArg, clang-analyzer-unix.cstring.NullArg, cppcoreguidelines-avoid-non-const-global-variables, cppcoreguidelines-avoid-goto, cppcoreguidelines-interfaces-global-init, cppcoreguidelines-macro-usage, cppcoreguidelines-narrowing-conversions, cppcoreguidelines-no-malloc, cppcoreguidelines-pro-type-const-cast, cppcoreguidelines-pro-type-member-init, cppcoreguidelines-pro-type-reinterpret-cast, cppcoreguidelines-pro-type-static-cast-downcast, cppcoreguidelines-pro-type-vararg, cppcoreguidelines-slicing, cppcoreguidelines-special-member-functions, fuchsia-statically-constructed-objects, google-default-arguments, google-explicit-constructor, google-runtime-int, google-runtime-operator, google-upgrade-googletest-case, hicpp-avoid-goto, hicpp-multiway-paths-covered, hicpp-signed-bitwise, llvm-header-guard, misc-definitions-in-headers, misc-misplaced-const, misc-new-delete-overloads, misc-non-copyable-objects, misc-no-recursion, misc-redundant-expression, misc-static-assert, misc-unconventional-assign-operator, misc-unused-alias-decls, misc-unused-parameters, misc-unused-using-decls, modernize-deprecated-headers, modernize-pass-by-value, modernize-raw-string-literal, modernize-redundant-void-arg, modernize-return-braced-init-list, modernize-unary-static-assert, modernize-use-bool-literals, modernize-use-default-member-init, modernize-use-equals-default, modernize-use-equals-delete, modernize-use-noexcept, modernize-use-nullptr, modernize-use-override, performance-implicit-conversion-in-loop, performance-move-const-arg, performance-move-constructor-init, performance-no-automatic-move, performance-noexcept-move-constructor, performance-trivially-destructible, performance-unnecessary-copy-initialization, performance-unnecessary-value-param, readability-it-bool-conversion, readability-avoid-const-params-in-decls, readability-const-return-type, readability-convert-member-functions-to-static, readability-deleted-default, readability-delete-null-pointer, readability-else-after-return, readability-function-size, readability-inconsistent-declaration-parameter-name, readability-isolate-declaration, readability-make-member-function-const, readability-misplaced-array-index, readability-named-parameter, readability-non-const-parameter, readability-qualified-auto, readability-redundant-access-specifiers, readability-redundant-control-flow, readability-redundant-declaration, readability-redundant-function-ptr-dereference, readability-redundant-member-init, readability-redundant-preprocessor, readability-simplify-boolean-expr, readability-simplify-subscript-expr, readability-static-accessed-through-instance, readability-static-definition-in-anonymous-namespace",
            "buildRoot": "${env.TWWorkspaceHome}/TWBuilds/TWInt/CoreProcessSample/Linux-x64-TWSimulation",
            "installRoot": "${env.TWWorkspaceHome}/TWBuilds/TWInt/CoreProcessSample/Linux-x64-TWSimulation/install",
            "cmakeExecutable": "/usr/bin/cmake",
            "remoteCopySourcesExclusionList": [ ".vs", ".git", "out" ],
            "remoteMachineName": "127.0.0.1",
            "remoteCMakeListsRoot": "$TWWorkspaceHomeDrive",
            "remoteBuildRoot": "$TWWorkspaceHome/TWBuilds/TWInt/CoreProcessSample/Linux-x64-TWSimulation",
            "remoteInstallRoot": "$TWWorkspaceHome/TWBuilds/TWInt/CoreProcessSample/Linux-x64-TWSimulation/install",
            "remoteCopySources": false,
            "rsyncCommandArgs": "-t --delete --delete-excluded",
            "remoteCopyBuildOutput": false,
            "remoteCopySourcesMethod": "rsync",
            "addressSanitizerRuntimeFlags": "detect_leaks=0",
            "remoteCopySourcesOutputVerbosity": "Normal",
            "remoteCopySourcesConcurrentCopies": "10",
            "remotePreGenerateCommand": "$TWWorkspaceHome/TallyWorldPMT/TallyWorld/TWPMT.VSSetup/Wizard/Remote/PreGenerate.sh",
            "remotePrebuildCommand": "$TWWorkspaceHome/TallyWorldPMT/TallyWorld/TWPMT.VSSetup/Wizard/Remote/Prebuild.sh",
            "remotePostbuildCommand": "$TWWorkspaceHome/TallyWorldPMT/TallyWorld/TWPMT.VSSetup/Wizard/Remote/Postbuild.sh"
        },
        {
            "name": "Linux-x64-TWRelease",
            "generator": "Ninja",
            "configurationType": "Release",
            "inheritEnvironments": [ "linux_clang_x64" ],
            "cmakeCommandArgs": "",
            "buildCommandArgs": "",
            "ctestCommandArgs": "",
            "variables": [
                {
                    "name": "TW_BUILD_OS",
                    "value": "Linux",
                    "type": "STRING"
                },
                {
                    "name": "TW_BUILD_CONFIG",
                    "value": "TWRelease",
                    "type": "STRING"
                },
                {
                    "name": "TW_BUILD_ARCH",
                    "value": "x64",
                    "type": "STRING"
                },
                {
                    "name": "TW_IS_TEST",
                    "value": "False",
                    "type": "STRING"
                },
                {
                    "name": "TW_TEST_FRAMEWORK",
                    "value": "",
                    "type": "STRING"
                }
            ],
            "clangTidyChecks": "-*, bugprone-bad-signal-to-kill-thread, bugprone-bool-pointer-implicit-conversion, bugprone-branch-clone, bugprone-copy-constructor-init, bugprone-dangling-handle, bugprone-dynamic-static-initializers, bugprone-exception-escape, bugprone-forward-declaration-namespace, bugprone-forwarding-reference-overload, bugprone-incorrect-roundings, bugprone-infinite-loop, bugprone-integer-division, bugprone-macro-parentheses, bugprone-macro-repeated-side-effects, bugprone-misplaced-operator-in-strlen-in-alloc, bugprone-misplaced-pointer-arithmetic-in-alloc, bugprone-misplaced-widening-cast, bugprone-move-forwarding-reference, bugprone-multiple-statement-macro, bugprone-not-null-terminated-result, bugprone-parent-virtual-call, bugprone-posix-return, bugprone-reserved-identifier, bugprone-signed-char-misuse, bugprone-sizeof-expression, bugprone-spuriously-wake-up-functions (cert-con36-c), bugprone-string-literal-with-embedded-nul, bugprone-suspicious-enum-usage, bugprone-suspicious-include, bugprone-suspicious-memset-usage, bugprone-suspicious-missing-comma, bugprone-suspicious-semicolon, bugprone-suspicious-string-compare, bugprone-swapped-arguments, bugprone-terminating-continue, bugprone-too-small-loop-variable, bugprone-undefined-memory-manipulation, bugprone-undelegated-constructor, bugprone-unhandled-self-assignment (cert-oop54-cpp), bugprone-unused-raii, bugprone-use-after-move, cert-dcl21-cpp, cert-dcl50-cpp, cert-err34-c, cert-err58-cpp, cert-flp30-c, cert-mem57-cpp, cert-msc50-cpp, cert-msc51-cpp, cert-oop57-cpp, cert-oop58-cpp, clang-analyzer-core.DivideZero, clang-analyzer-core.NonNullParamChecker, clang-analyzer-core.NullDereference, clang-analyzer-core.StackAddressEscape, clang-analyzer-core.UndefinedBinaryOperatorResult, clang-analyzer-core.VLASize, clang-analyzer-core.uninitialized.ArraySubscript, clang-analyzer-core.uninitialized.Assign, clang-analyzer-core.uninitialized.Branch, clang-analyzer-core.uninitialized.CapturedBlockVariable, clang-analyzer-core.uninitialized.UndefReturn, clang-analyzer-cplusplus.InnerPointer, clang-analyzer-cplusplus.NewDelete, clang-analyzer-cplusplus.NewDeleteLeaks, clang-analyzer-deadcode.DeadStores, clang-analyzer-optin.performance.Padding, clang-analyzer-optin.portability.UnixAPI, clang-analyzer-valist.CopyToSelf, clang-analyzer-valist.Uninitialized, clang-analyzer-valist.Unterminated, clang-analyzer-security.FloatLoopCounter, clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling, clang-analyzer-core.CallAndMessage, clang-analyzer-optin.cplusplus.UninitializedObject, clang-analyzer-optin.cplusplus.VirtualCall, clang-analyzer-security.insecureAPI.UncheckedReturn, clang-analyzer-security.insecureAPI.bcmp, clang-analyzer-security.insecureAPI.bcopy, clang-analyzer-security.insecureAPI.bzero, clang-analyzer-security.insecureAPI.getpw, clang-analyzer-security.insecureAPI.gets, clang-analyzer-security.insecureAPI.mkstemp, clang-analyzer-security.insecureAPI.mktemp, clang-analyzer-security.insecureAPI.rand, clang-analyzer-security.insecureAPI.strcpy, clang-analyzer-security.insecureAPI.vfork, clang-analyzer-unix.API, clang-analyzer-unix.Malloc, clang-analyzer-unix.MallocSizeof, clang-analyzer-unix.MismatchedDeallocator, clang-analyzer-unix.Vfork, clang-analyzer-unix.cstring.BadSizeArg, clang-analyzer-unix.cstring.NullArg, cppcoreguidelines-avoid-non-const-global-variables, cppcoreguidelines-avoid-goto, cppcoreguidelines-interfaces-global-init, cppcoreguidelines-macro-usage, cppcoreguidelines-narrowing-conversions, cppcoreguidelines-no-malloc, cppcoreguidelines-pro-type-const-cast, cppcoreguidelines-pro-type-member-init, cppcoreguidelines-pro-type-reinterpret-cast, cppcoreguidelines-pro-type-static-cast-downcast, cppcoreguidelines-pro-type-vararg, cppcoreguidelines-slicing, cppcoreguidelines-special-member-functions, fuchsia-statically-constructed-objects, google-default-arguments, google-explicit-constructor, google-runtime-int, google-runtime-operator, google-upgrade-googletest-case, hicpp-avoid-goto, hicpp-multiway-paths-covered, hicpp-signed-bitwise, llvm-header-guard, misc-definitions-in-headers, misc-misplaced-const, misc-new-delete-overloads, misc-non-copyable-objects, misc-no-recursion, misc-redundant-expression, misc-static-assert, misc-unconventional-assign-operator, misc-unused-alias-decls, misc-unused-parameters, misc-unused-using-decls, modernize-deprecated-headers, modernize-pass-by-value, modernize-raw-string-literal, modernize-redundant-void-arg, modernize-return-braced-init-list, modernize-unary-static-assert, modernize-use-bool-literals, modernize-use-default-member-init, modernize-use-equals-default, modernize-use-equals-delete, modernize-use-noexcept, modernize-use-nullptr, modernize-use-override, performance-implicit-conversion-in-loop, performance-move-const-arg, performance-move-constructor-init, performance-no-automatic-move, performance-noexcept-move-constructor, performance-trivially-destructible, performance-unnecessary-copy-initialization, performance-unnecessary-value-param, readability-it-bool-conversion, readability-avoid-const-params-in-decls, readability-const-return-type, readability-convert-member-functions-to-static, readability-deleted-default, readability-delete-null-pointer, readability-else-after-return, readability-function-size, readability-inconsistent-declaration-parameter-name, readability-isolate-declaration, readability-make-member-function-const, readability-misplaced-array-index, readability-named-parameter, readability-non-const-parameter, readability-qualified-auto, readability-redundant-access-specifiers, readability-redundant-control-flow, readability-redundant-declaration, readability-redundant-function-ptr-dereference, readability-redundant-member-init, readability-redundant-preprocessor, readability-simplify-boolean-expr, readability-simplify-subscript-expr, readability-static-accessed-through-instance, readability-static-definition-in-anonymous-namespace",
            "buildRoot": "${env.TWWorkspaceHome}/TWBuilds/TWInt/CoreProcessSample/Linux-x64-TWRelease",
            "installRoot": "${env.TWWorkspaceHome}/TWBuilds/TWInt/CoreProcessSample/Linux-x64-TWRelease/install",
            "cmakeExecutable": "/usr/bin/cmake",
            "remoteCopySourcesExclusionList": [ ".vs", ".git", "out" ],
            "remoteMachineName": "127.0.0.1",
            "remoteCMakeListsRoot": "$TWWorkspaceHomeDrive",
            "remoteBuildRoot": "$TWWorkspaceHome/TWBuilds/TWInt/CoreProcessSample/Linux-x64-TWRelease",
            "remoteInstallRoot": "$TWWorkspaceHome/TWBuilds/TWInt/CoreProcessSample/Linux-x64-TWRelease/install",
            "remoteCopySources": false,
            "rsyncCommandArgs": "-t --delete --delete-excluded",
            "remoteCopyBuildOutput": false,
            "remoteCopySourcesMethod": "rsync",
            "addressSanitizerRuntimeFlags": "detect_leaks=0",
            "remoteCopySourcesOutputVerbosity": "Normal",
            "remoteCopySourcesConcurrentCopies": "10",
            "remotePreGenerateCommand": "$TWWorkspaceHome/TallyWorldPMT/TallyWorld/TWPMT.VSSetup/Wizard/Remote/PreGenerate.sh",
            "remotePrebuildCommand": "$TWWorkspaceHome/TallyWorldPMT/TallyWorld/TWPMT.VSSetup/Wizard/Remote/Prebuild.sh",
            "remotePostbuildCommand": "$TWWorkspaceHome/TallyWorldPMT/TallyWorld/TWPMT.VSSetup/Wizard/Remote/Postbuild.sh"
        },
        {
            "name": "Linux-ARM64-TWDebug",
            "generator": "Ninja",
            "configurationType": "Debug",
            "inheritEnvironments": [ "linux_clang_arm64" ],
            "cmakeCommandArgs": "",
            "buildCommandArgs": "",
            "ctestCommandArgs": "",
            "variables": [
                {
                    "name": "TW_BUILD_OS",
                    "value": "Linux",
                    "type": "STRING"
                },
                {
                    "name": "TW_BUILD_CONFIG",
                    "value": "TWDebug",
                    "type": "STRING"
                },
                {
                    "name": "TW_BUILD_ARCH",
                    "value": "ARM64",
                    "type": "STRING"
                },
                {
                    "name": "TW_IS_TEST",
                    "value": "False",
                    "type": "STRING"
                },
                {
                    "name": "TW_TEST_FRAMEWORK",
                    "value": "",
                    "type": "STRING"
                }
            ],
            "clangTidyChecks": "-*, bugprone-bad-signal-to-kill-thread, bugprone-bool-pointer-implicit-conversion, bugprone-branch-clone, bugprone-copy-constructor-init, bugprone-dangling-handle, bugprone-dynamic-static-initializers, bugprone-exception-escape, bugprone-forward-declaration-namespace, bugprone-forwarding-reference-overload, bugprone-incorrect-roundings, bugprone-infinite-loop, bugprone-integer-division, bugprone-macro-parentheses, bugprone-macro-repeated-side-effects, bugprone-misplaced-operator-in-strlen-in-alloc, bugprone-misplaced-pointer-arithmetic-in-alloc, bugprone-misplaced-widening-cast, bugprone-move-forwarding-reference, bugprone-multiple-statement-macro, bugprone-not-null-terminated-result, bugprone-parent-virtual-call, bugprone-posix-return, bugprone-reserved-identifier, bugprone-signed-char-misuse, bugprone-sizeof-expression, bugprone-spuriously-wake-up-functions (cert-con36-c), bugprone-string-literal-with-embedded-nul, bugprone-suspicious-enum-usage, bugprone-suspicious-include, bugprone-suspicious-memset-usage, bugprone-suspicious-missing-comma, bugprone-suspicious-semicolon, bugprone-suspicious-string-compare, bugprone-swapped-arguments, bugprone-terminating-continue, bugprone-too-small-loop-variable, bugprone-undefined-memory-manipulation, bugprone-undelegated-constructor, bugprone-unhandled-self-assignment (cert-oop54-cpp), bugprone-unused-raii, bugprone-use-after-move, cert-dcl21-cpp, cert-dcl50-cpp, cert-err34-c, cert-err58-cpp, cert-flp30-c, cert-mem57-cpp, cert-msc50-cpp, cert-msc51-cpp, cert-oop57-cpp, cert-oop58-cpp, clang-analyzer-core.DivideZero, clang-analyzer-core.NonNullParamChecker, clang-analyzer-core.NullDereference, clang-analyzer-core.StackAddressEscape, clang-analyzer-core.UndefinedBinaryOperatorResult, clang-analyzer-core.VLASize, clang-analyzer-core.uninitialized.ArraySubscript, clang-analyzer-core.uninitialized.Assign, clang-analyzer-core.uninitialized.Branch, clang-analyzer-core.uninitialized.CapturedBlockVariable, clang-analyzer-core.uninitialized.UndefReturn, clang-analyzer-cplusplus.InnerPointer, clang-analyzer-cplusplus.NewDelete, clang-analyzer-cplusplus.NewDeleteLeaks, clang-analyzer-deadcode.DeadStores, clang-analyzer-optin.performance.Padding, clang-analyzer-optin.portability.UnixAPI, clang-analyzer-valist.CopyToSelf, clang-analyzer-valist.Uninitialized, clang-analyzer-valist.Unterminated, clang-analyzer-security.FloatLoopCounter, clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling, clang-analyzer-core.CallAndMessage, clang-analyzer-optin.cplusplus.UninitializedObject, clang-analyzer-optin.cplusplus.VirtualCall, clang-analyzer-security.insecureAPI.UncheckedReturn, clang-analyzer-security.insecureAPI.bcmp, clang-analyzer-security.insecureAPI.bcopy, clang-analyzer-security.insecureAPI.bzero, clang-analyzer-security.insecureAPI.getpw, clang-analyzer-security.insecureAPI.gets, clang-analyzer-security.insecureAPI.mkstemp, clang-analyzer-security.insecureAPI.mktemp, clang-analyzer-security.insecureAPI.rand, clang-analyzer-security.insecureAPI.strcpy, clang-analyzer-security.insecureAPI.vfork, clang-analyzer-unix.API, clang-analyzer-unix.Malloc, clang-analyzer-unix.MallocSizeof, clang-analyzer-unix.MismatchedDeallocator, clang-analyzer-unix.Vfork, clang-analyzer-unix.cstring.BadSizeArg, clang-analyzer-unix.cstring.NullArg, cppcoreguidelines-avoid-non-const-global-variables, cppcoreguidelines-avoid-goto, cppcoreguidelines-interfaces-global-init, cppcoreguidelines-macro-usage, cppcoreguidelines-narrowing-conversions, cppcoreguidelines-no-malloc, cppcoreguidelines-pro-type-const-cast, cppcoreguidelines-pro-type-member-init, cppcoreguidelines-pro-type-reinterpret-cast, cppcoreguidelines-pro-type-static-cast-downcast, cppcoreguidelines-pro-type-vararg, cppcoreguidelines-slicing, cppcoreguidelines-special-member-functions, fuchsia-statically-constructed-objects, google-default-arguments, google-explicit-constructor, google-runtime-int, google-runtime-operator, google-upgrade-googletest-case, hicpp-avoid-goto, hicpp-multiway-paths-covered, hicpp-signed-bitwise, llvm-header-guard, misc-definitions-in-headers, misc-misplaced-const, misc-new-delete-overloads, misc-non-copyable-objects, misc-no-recursion, misc-redundant-expression, misc-static-assert, misc-unconventional-assign-operator, misc-unused-alias-decls, misc-unused-parameters, misc-unused-using-decls, modernize-deprecated-headers, modernize-pass-by-value, modernize-raw-string-literal, modernize-redundant-void-arg, modernize-return-braced-init-list, modernize-unary-static-assert, modernize-use-bool-literals, modernize-use-default-member-init, modernize-use-equals-default, modernize-use-equals-delete, modernize-use-noexcept, modernize-use-nullptr, modernize-use-override, performance-implicit-conversion-in-loop, performance-move-const-arg, performance-move-constructor-init, performance-no-automatic-move, performance-noexcept-move-constructor, performance-trivially-destructible, performance-unnecessary-copy-initialization, performance-unnecessary-value-param, readability-it-bool-conversion, readability-avoid-const-params-in-decls, readability-const-return-type, readability-convert-member-functions-to-static, readability-deleted-default, readability-delete-null-pointer, readability-else-after-return, readability-function-size, readability-inconsistent-declaration-parameter-name, readability-isolate-declaration, readability-make-member-function-const, readability-misplaced-array-index, readability-named-parameter, readability-non-const-parameter, readability-qualified-auto, readability-redundant-access-specifiers, readability-redundant-control-flow, readability-redundant-declaration, readability-redundant-function-ptr-dereference, readability-redundant-member-init, readability-redundant-preprocessor, readability-simplify-boolean-expr, readability-simplify-subscript-expr, readability-static-accessed-through-instance, readability-static-definition-in-anonymous-namespace",
            "buildRoot": "${env.TWWorkspaceHome}/TWBuilds/TWInt/CoreProcessSample/Linux-ARM64-TWDebug",
            "installRoot": "${env.TWWorkspaceHome}/TWBuilds/TWInt/CoreProcessSample/Linux-ARM64-TWDebug/install",
            "cmakeExecutable": "/usr/bin/cmake",
            "remoteCopySourcesExclusionList": [ ".vs", ".git", "out" ],
            "remoteMachineName": "127.0.0.1",
            "remoteCMakeListsRoot": "$TWWorkspaceHomeDrive",
            "remoteBuildRoot": "$TWWorkspaceHome/TWBuilds/TWInt/CoreProcessSample/Linux-ARM64-TWDebug",
            "remoteInstallRoot": "$TWWorkspaceHome/TWBuilds/TWInt/CoreProcessSample/Linux-ARM64-TWDebug/install",
            "remoteCopySources": false,
            "rsyncCommandArgs": "-t --delete --delete-excluded",
            "remoteCopyBuildOutput": false,
            "remoteCopySourcesMethod": "rsync",
            "addressSanitizerRuntimeFlags": "detect_leaks=0",
            "remoteCopySourcesOutputVerbosity": "Normal",
            "remoteCopySourcesConcurrentCopies": "10",
            "remotePreGenerateCommand": "$TWWorkspaceHome/TallyWorldPMT/TallyWorld/TWPMT.VSSetup/Wizard/Remote/PreGenerate.sh",
            "remotePrebuildCommand": "$TWWorkspaceHome/TallyWorldPMT/TallyWorld/TWPMT.VSSetup/Wizard/Remote/Prebuild.sh",
            "remotePostbuildCommand": "$TWWorkspaceHome/TallyWorldPMT/TallyWorld/TWPMT.VSSetup/Wizard/Remote/Postbuild.sh"
        },
        {
            "name": "Linux-ARM64-TWMetricsOnly",
            "generator": "Ninja",
            "configurationType": "Debug",
            "inheritEnvironments": [ "linux_clang_arm64" ],
            "cmakeCommandArgs": "",
            "buildCommandArgs": "",
            "ctestCommandArgs": "",
            "variables": [
                {
                    "name": "TW_BUILD_OS",
                    "value": "Linux",
                    "type": "STRING"
                },
                {
                    "name": "TW_BUILD_CONFIG",
                    "value": "TWMetricsOnly",
                    "type": "STRING"
                },
                {
                    "name": "TW_BUILD_ARCH",
                    "value": "ARM64",
                    "type": "STRING"
                },
                {
                    "name": "TW_IS_TEST",
                    "value": "False",
                    "type": "STRING"
                },
                {
                    "name": "TW_TEST_FRAMEWORK",
                    "value": "",
                    "type": "STRING"
                }
            ],
            "clangTidyChecks": "-*, bugprone-bad-signal-to-kill-thread, bugprone-bool-pointer-implicit-conversion, bugprone-branch-clone, bugprone-copy-constructor-init, bugprone-dangling-handle, bugprone-dynamic-static-initializers, bugprone-exception-escape, bugprone-forward-declaration-namespace, bugprone-forwarding-reference-overload, bugprone-incorrect-roundings, bugprone-infinite-loop, bugprone-integer-division, bugprone-macro-parentheses, bugprone-macro-repeated-side-effects, bugprone-misplaced-operator-in-strlen-in-alloc, bugprone-misplaced-pointer-arithmetic-in-alloc, bugprone-misplaced-widening-cast, bugprone-move-forwarding-reference, bugprone-multiple-statement-macro, bugprone-not-null-terminated-result, bugprone-parent-virtual-call, bugprone-posix-return, bugprone-reserved-identifier, bugprone-signed-char-misuse, bugprone-sizeof-expression, bugprone-spuriously-wake-up-functions (cert-con36-c), bugprone-string-literal-with-embedded-nul, bugprone-suspicious-enum-usage, bugprone-suspicious-include, bugprone-suspicious-memset-usage, bugprone-suspicious-missing-comma, bugprone-suspicious-semicolon, bugprone-suspicious-string-compare, bugprone-swapped-arguments, bugprone-terminating-continue, bugprone-too-small-loop-variable, bugprone-undefined-memory-manipulation, bugprone-undelegated-constructor, bugprone-unhandled-self-assignment (cert-oop54-cpp), bugprone-unused-raii, bugprone-use-after-move, cert-dcl21-cpp, cert-dcl50-cpp, cert-err34-c, cert-err58-cpp, cert-flp30-c, cert-mem57-cpp, cert-msc50-cpp, cert-msc51-cpp, cert-oop57-cpp, cert-oop58-cpp, clang-analyzer-core.DivideZero, clang-analyzer-core.NonNullParamChecker, clang-analyzer-core.NullDereference, clang-analyzer-core.StackAddressEscape, clang-analyzer-core.UndefinedBinaryOperatorResult, clang-analyzer-core.VLASize, clang-analyzer-core.uninitialized.ArraySubscript, clang-analyzer-core.uninitialized.Assign, clang-analyzer-core.uninitialized.Branch, clang-analyzer-core.uninitialized.CapturedBlockVariable, clang-analyzer-core.uninitialized.UndefReturn, clang-analyzer-cplusplus.InnerPointer, clang-analyzer-cplusplus.NewDelete, clang-analyzer-cplusplus.NewDeleteLeaks, clang-analyzer-deadcode.DeadStores, clang-analyzer-optin.performance.Padding, clang-analyzer-optin.portability.UnixAPI, clang-analyzer-valist.CopyToSelf, clang-analyzer-valist.Uninitialized, clang-analyzer-valist.Unterminated, clang-analyzer-security.FloatLoopCounter, clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling, clang-analyzer-core.CallAndMessage, clang-analyzer-optin.cplusplus.UninitializedObject, clang-analyzer-optin.cplusplus.VirtualCall, clang-analyzer-security.insecureAPI.UncheckedReturn, clang-analyzer-security.insecureAPI.bcmp, clang-analyzer-security.insecureAPI.bcopy, clang-analyzer-security.insecureAPI.bzero, clang-analyzer-security.insecureAPI.getpw, clang-analyzer-security.insecureAPI.gets, clang-analyzer-security.insecureAPI.mkstemp, clang-analyzer-security.insecureAPI.mktemp, clang-analyzer-security.insecureAPI.rand, clang-analyzer-security.insecureAPI.strcpy, clang-analyzer-security.insecureAPI.vfork, clang-analyzer-unix.API, clang-analyzer-unix.Malloc, clang-analyzer-unix.MallocSizeof, clang-analyzer-unix.MismatchedDeallocator, clang-analyzer-unix.Vfork, clang-analyzer-unix.cstring.BadSizeArg, clang-analyzer-unix.cstring.NullArg, cppcoreguidelines-avoid-non-const-global-variables, cppcoreguidelines-avoid-goto, cppcoreguidelines-interfaces-global-init, cppcoreguidelines-macro-usage, cppcoreguidelines-narrowing-conversions, cppcoreguidelines-no-malloc, cppcoreguidelines-pro-type-const-cast, cppcoreguidelines-pro-type-member-init, cppcoreguidelines-pro-type-reinterpret-cast, cppcoreguidelines-pro-type-static-cast-downcast, cppcoreguidelines-pro-type-vararg, cppcoreguidelines-slicing, cppcoreguidelines-special-member-functions, fuchsia-statically-constructed-objects, google-default-arguments, google-explicit-constructor, google-runtime-int, google-runtime-operator, google-upgrade-googletest-case, hicpp-avoid-goto, hicpp-multiway-paths-covered, hicpp-signed-bitwise, llvm-header-guard, misc-definitions-in-headers, misc-misplaced-const, misc-new-delete-overloads, misc-non-copyable-objects, misc-no-recursion, misc-redundant-expression, misc-static-assert, misc-unconventional-assign-operator, misc-unused-alias-decls, misc-unused-parameters, misc-unused-using-decls, modernize-deprecated-headers, modernize-pass-by-value, modernize-raw-string-literal, modernize-redundant-void-arg, modernize-return-braced-init-list, modernize-unary-static-assert, modernize-use-bool-literals, modernize-use-default-member-init, modernize-use-equals-default, modernize-use-equals-delete, modernize-use-noexcept, modernize-use-nullptr, modernize-use-override, performance-implicit-conversion-in-loop, performance-move-const-arg, performance-move-constructor-init, performance-no-automatic-move, performance-noexcept-move-constructor, performance-trivially-destructible, performance-unnecessary-copy-initialization, performance-unnecessary-value-param, readability-it-bool-conversion, readability-avoid-const-params-in-decls, readability-const-return-type, readability-convert-member-functions-to-static, readability-deleted-default, readability-delete-null-pointer, readability-else-after-return, readability-function-size, readability-inconsistent-declaration-parameter-name, readability-isolate-declaration, readability-make-member-function-const, readability-misplaced-array-index, readability-named-parameter, readability-non-const-parameter, readability-qualified-auto, readability-redundant-access-specifiers, readability-redundant-control-flow, readability-redundant-declaration, readability-redundant-function-ptr-dereference, readability-redundant-member-init, readability-redundant-preprocessor, readability-simplify-boolean-expr, readability-simplify-subscript-expr, readability-static-accessed-through-instance, readability-static-definition-in-anonymous-namespace",
            "buildRoot": "${env.TWWorkspaceHome}/TWBuilds/TWInt/CoreProcessSample/Linux-ARM64-TWMetricsOnly",
            "installRoot": "${env.TWWorkspaceHome}/TWBuilds/TWInt/CoreProcessSample/Linux-ARM64-TWMetricsOnly/install",
            "cmakeExecutable": "/usr/bin/cmake",
            "remoteCopySourcesExclusionList": [ ".vs", ".git", "out" ],
            "remoteMachineName": "127.0.0.1",
            "remoteCMakeListsRoot": "$TWWorkspaceHomeDrive",
            "remoteBuildRoot": "$TWWorkspaceHome/TWBuilds/TWInt/CoreProcessSample/Linux-ARM64-TWMetricsOnly",
            "remoteInstallRoot": "$TWWorkspaceHome/TWBuilds/TWInt/CoreProcessSample/Linux-ARM64-TWMetricsOnly/install",
            "remoteCopySources": false,
            "rsyncCommandArgs": "-t --delete --delete-excluded",
            "remoteCopyBuildOutput": false,
            "remoteCopySourcesMethod": "rsync",
            "addressSanitizerRuntimeFlags": "detect_leaks=0",
            "remoteCopySourcesOutputVerbosity": "Normal",
            "remoteCopySourcesConcurrentCopies": "10",
            "remotePreGenerateCommand": "$TWWorkspaceHome/TallyWorldPMT/TallyWorld/TWPMT.VSSetup/Wizard/Remote/PreGenerate.sh",
            "remotePrebuildCommand": "$TWWorkspaceHome/TallyWorldPMT/TallyWorld/TWPMT.VSSetup/Wizard/Remote/Prebuild.sh",
            "remotePostbuildCommand": "$TWWorkspaceHome/TallyWorldPMT/TallyWorld/TWPMT.VSSetup/Wizard/Remote/Postbuild.sh"
        },
        {
            "name": "Linux-ARM64-TWSimulation",
            "generator": "Ninja",
            "configurationType": "Debug",
            "inheritEnvironments": [ "linux_clang_arm64" ],
            "cmakeCommandArgs": "",
            "buildCommandArgs": "",
            "ctestCommandArgs": "",
            "variables": [
                {
                    "name": "TW_BUILD_OS",
                    "value": "Linux",
                    "type": "STRING"
                },
                {
                    "name": "TW_BUILD_CONFIG",
                    "value": "TWSimulation",
                    "type": "STRING"
                },
                {
                    "name": "TW_BUILD_ARCH",
                    "value": "ARM64",
                    "type": "STRING"
                },
                {
                    "name": "TW_IS_TEST",
                    "value": "False",
                    "type": "STRING"
                },
                {
                    "name": "TW_TEST_FRAMEWORK",
                    "value": "",
                    "type": "STRING"
                }
            ],
            "clangTidyChecks": "-*, bugprone-bad-signal-to-kill-thread, bugprone-bool-pointer-implicit-conversion, bugprone-branch-clone, bugprone-copy-constructor-init, bugprone-dangling-handle, bugprone-dynamic-static-initializers, bugprone-exception-escape, bugprone-forward-declaration-namespace, bugprone-forwarding-reference-overload, bugprone-incorrect-roundings, bugprone-infinite-loop, bugprone-integer-division, bugprone-macro-parentheses, bugprone-macro-repeated-side-effects, bugprone-misplaced-operator-in-strlen-in-alloc, bugprone-misplaced-pointer-arithmetic-in-alloc, bugprone-misplaced-widening-cast, bugprone-move-forwarding-reference, bugprone-multiple-statement-macro, bugprone-not-null-terminated-result, bugprone-parent-virtual-call, bugprone-posix-return, bugprone-reserved-identifier, bugprone-signed-char-misuse, bugprone-sizeof-expression, bugprone-spuriously-wake-up-functions (cert-con36-c), bugprone-string-literal-with-embedded-nul, bugprone-suspicious-enum-usage, bugprone-suspicious-include, bugprone-suspicious-memset-usage, bugprone-suspicious-missing-comma, bugprone-suspicious-semicolon, bugprone-suspicious-string-compare, bugprone-swapped-arguments, bugprone-terminating-continue, bugprone-too-small-loop-variable, bugprone-undefined-memory-manipulation, bugprone-undelegated-constructor, bugprone-unhandled-self-assignment (cert-oop54-cpp), bugprone-unused-raii, bugprone-use-after-move, cert-dcl21-cpp, cert-dcl50-cpp, cert-err34-c, cert-err58-cpp, cert-flp30-c, cert-mem57-cpp, cert-msc50-cpp, cert-msc51-cpp, cert-oop57-cpp, cert-oop58-cpp, clang-analyzer-core.DivideZero, clang-analyzer-core.NonNullParamChecker, clang-analyzer-core.NullDereference, clang-analyzer-core.StackAddressEscape, clang-analyzer-core.UndefinedBinaryOperatorResult, clang-analyzer-core.VLASize, clang-analyzer-core.uninitialized.ArraySubscript, clang-analyzer-core.uninitialized.Assign, clang-analyzer-core.uninitialized.Branch, clang-analyzer-core.uninitialized.CapturedBlockVariable, clang-analyzer-core.uninitialized.UndefReturn, clang-analyzer-cplusplus.InnerPointer, clang-analyzer-cplusplus.NewDelete, clang-analyzer-cplusplus.NewDeleteLeaks, clang-analyzer-deadcode.DeadStores, clang-analyzer-optin.performance.Padding, clang-analyzer-optin.portability.UnixAPI, clang-analyzer-valist.CopyToSelf, clang-analyzer-valist.Uninitialized, clang-analyzer-valist.Unterminated, clang-analyzer-security.FloatLoopCounter, clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling, clang-analyzer-core.CallAndMessage, clang-analyzer-optin.cplusplus.UninitializedObject, clang-analyzer-optin.cplusplus.VirtualCall, clang-analyzer-security.insecureAPI.UncheckedReturn, clang-analyzer-security.insecureAPI.bcmp, clang-analyzer-security.insecureAPI.bcopy, clang-analyzer-security.insecureAPI.bzero, clang-analyzer-security.insecureAPI.getpw, clang-analyzer-security.insecureAPI.gets, clang-analyzer-security.insecureAPI.mkstemp, clang-analyzer-security.insecureAPI.mktemp, clang-analyzer-security.insecureAPI.rand, clang-analyzer-security.insecureAPI.strcpy, clang-analyzer-security.insecureAPI.vfork, clang-analyzer-unix.API, clang-analyzer-unix.Malloc, clang-analyzer-unix.MallocSizeof, clang-analyzer-unix.MismatchedDeallocator, clang-analyzer-unix.Vfork, clang-analyzer-unix.cstring.BadSizeArg, clang-analyzer-unix.cstring.NullArg, cppcoreguidelines-avoid-non-const-global-variables, cppcoreguidelines-avoid-goto, cppcoreguidelines-interfaces-global-init, cppcoreguidelines-macro-usage, cppcoreguidelines-narrowing-conversions, cppcoreguidelines-no-malloc, cppcoreguidelines-pro-type-const-cast, cppcoreguidelines-pro-type-member-init, cppcoreguidelines-pro-type-reinterpret-cast, cppcoreguidelines-pro-type-static-cast-downcast, cppcoreguidelines-pro-type-vararg, cppcoreguidelines-slicing, cppcoreguidelines-special-member-functions, fuchsia-statically-constructed-objects, google-default-arguments, google-explicit-constructor, google-runtime-int, google-runtime-operator, google-upgrade-googletest-case, hicpp-avoid-goto, hicpp-multiway-paths-covered, hicpp-signed-bitwise, llvm-header-guard, misc-definitions-in-headers, misc-misplaced-const, misc-new-delete-overloads, misc-non-copyable-objects, misc-no-recursion, misc-redundant-expression, misc-static-assert, misc-unconventional-assign-operator, misc-unused-alias-decls, misc-unused-parameters, misc-unused-using-decls, modernize-deprecated-headers, modernize-pass-by-value, modernize-raw-string-literal, modernize-redundant-void-arg, modernize-return-braced-init-list, modernize-unary-static-assert, modernize-use-bool-literals, modernize-use-default-member-init, modernize-use-equals-default, modernize-use-equals-delete, modernize-use-noexcept, modernize-use-nullptr, modernize-use-override, performance-implicit-conversion-in-loop, performance-move-const-arg, performance-move-constructor-init, performance-no-automatic-move, performance-noexcept-move-constructor, performance-trivially-destructible, performance-unnecessary-copy-initialization, performance-unnecessary-value-param, readability-it-bool-conversion, readability-avoid-const-params-in-decls, readability-const-return-type, readability-convert-member-functions-to-static, readability-deleted-default, readability-delete-null-pointer, readability-else-after-return, readability-function-size, readability-inconsistent-declaration-parameter-name, readability-isolate-declaration, readability-make-member-function-const, readability-misplaced-array-index, readability-named-parameter, readability-non-const-parameter, readability-qualified-auto, readability-redundant-access-specifiers, readability-redundant-control-flow, readability-redundant-declaration, readability-redundant-function-ptr-dereference, readability-redundant-member-init, readability-redundant-preprocessor, readability-simplify-boolean-expr, readability-simplify-subscript-expr, readability-static-accessed-through-instance, readability-static-definition-in-anonymous-namespace",
            "buildRoot": "${env.TWWorkspaceHome}/TWBuilds/TWInt/CoreProcessSample/Linux-ARM64-TWSimulation",
            "installRoot": "${env.TWWorkspaceHome}/TWBuilds/TWInt/CoreProcessSample/Linux-ARM64-TWSimulation/install",
            "cmakeExecutable": "/usr/bin/cmake",
            "remoteCopySourcesExclusionList": [ ".vs", ".git", "out" ],
            "remoteMachineName": "127.0.0.1",
            "remoteCMakeListsRoot": "$TWWorkspaceHomeDrive",
            "remoteBuildRoot": "$TWWorkspaceHome/TWBuilds/TWInt/CoreProcessSample/Linux-ARM64-TWSimulation",
            "remoteInstallRoot": "$TWWorkspaceHome/TWBuilds/TWInt/CoreProcessSample/Linux-ARM64-TWSimulation/install",
            "remoteCopySources": false,
            "rsyncCommandArgs": "-t --delete --delete-excluded",
            "remoteCopyBuildOutput": false,
            "remoteCopySourcesMethod": "rsync",
            "addressSanitizerRuntimeFlags": "detect_leaks=0",
            "remoteCopySourcesOutputVerbosity": "Normal",
            "remoteCopySourcesConcurrentCopies": "10",
            "remotePreGenerateCommand": "$TWWorkspaceHome/TallyWorldPMT/TallyWorld/TWPMT.VSSetup/Wizard/Remote/PreGenerate.sh",
            "remotePrebuildCommand": "$TWWorkspaceHome/TallyWorldPMT/TallyWorld/TWPMT.VSSetup/Wizard/Remote/Prebuild.sh",
            "remotePostbuildCommand": "$TWWorkspaceHome/TallyWorldPMT/TallyWorld/TWPMT.VSSetup/Wizard/Remote/Postbuild.sh"
        },
        {
            "name": "Linux-ARM64-TWRelease",
            "generator": "Ninja",
            "configurationType": "Release",
            "inheritEnvironments": [ "linux_clang_arm64" ],
            "cmakeCommandArgs": "",
            "buildCommandArgs": "",
            "ctestCommandArgs": "",
            "variables": [
                {
                    "name": "TW_BUILD_OS",
                    "value": "Linux",
                    "type": "STRING"
                },
                {
                    "name": "TW_BUILD_CONFIG",
                    "value": "TWRelease",
                    "type": "STRING"
                },
                {
                    "name": "TW_BUILD_ARCH",
                    "value": "ARM64",
                    "type": "STRING"
                },
                {
                    "name": "TW_IS_TEST",
                    "value": "False",
                    "type": "STRING"
                },
                {
                    "name": "TW_TEST_FRAMEWORK",
                    "value": "",
                    "type": "STRING"
                }
            ],
            "clangTidyChecks": "-*, bugprone-bad-signal-to-kill-thread, bugprone-bool-pointer-implicit-conversion, bugprone-branch-clone, bugprone-copy-constructor-init, bugprone-dangling-handle, bugprone-dynamic-static-initializers, bugprone-exception-escape, bugprone-forward-declaration-namespace, bugprone-forwarding-reference-overload, bugprone-incorrect-roundings, bugprone-infinite-loop, bugprone-integer-division, bugprone-macro-parentheses, bugprone-macro-repeated-side-effects, bugprone-misplaced-operator-in-strlen-in-alloc, bugprone-misplaced-pointer-arithmetic-in-alloc, bugprone-misplaced-widening-cast, bugprone-move-forwarding-reference, bugprone-multiple-statement-macro, bugprone-not-null-terminated-result, bugprone-parent-virtual-call, bugprone-posix-return, bugprone-reserved-identifier, bugprone-signed-char-misuse, bugprone-sizeof-expression, bugprone-spuriously-wake-up-functions (cert-con36-c), bugprone-string-literal-with-embedded-nul, bugprone-suspicious-enum-usage, bugprone-suspicious-include, bugprone-suspicious-memset-usage, bugprone-suspicious-missing-comma, bugprone-suspicious-semicolon, bugprone-suspicious-string-compare, bugprone-swapped-arguments, bugprone-terminating-continue, bugprone-too-small-loop-variable, bugprone-undefined-memory-manipulation, bugprone-undelegated-constructor, bugprone-unhandled-self-assignment (cert-oop54-cpp), bugprone-unused-raii, bugprone-use-after-move, cert-dcl21-cpp, cert-dcl50-cpp, cert-err34-c, cert-err58-cpp, cert-flp30-c, cert-mem57-cpp, cert-msc50-cpp, cert-msc51-cpp, cert-oop57-cpp, cert-oop58-cpp, clang-analyzer-core.DivideZero, clang-analyzer-core.NonNullParamChecker, clang-analyzer-core.NullDereference, clang-analyzer-core.StackAddressEscape, clang-analyzer-core.UndefinedBinaryOperatorResult, clang-analyzer-core.VLASize, clang-analyzer-core.uninitialized.ArraySubscript, clang-analyzer-core.uninitialized.Assign, clang-analyzer-core.uninitialized.Branch, clang-analyzer-core.uninitialized.CapturedBlockVariable, clang-analyzer-core.uninitialized.UndefReturn, clang-analyzer-cplusplus.InnerPointer, clang-analyzer-cplusplus.NewDelete, clang-analyzer-cplusplus.NewDeleteLeaks, clang-analyzer-deadcode.DeadStores, clang-analyzer-optin.performance.Padding, clang-analyzer-optin.portability.UnixAPI, clang-analyzer-valist.CopyToSelf, clang-analyzer-valist.Uninitialized, clang-analyzer-valist.Unterminated, clang-analyzer-security.FloatLoopCounter, clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling, clang-analyzer-core.CallAndMessage, clang-analyzer-optin.cplusplus.UninitializedObject, clang-analyzer-optin.cplusplus.VirtualCall, clang-analyzer-security.insecureAPI.UncheckedReturn, clang-analyzer-security.insecureAPI.bcmp, clang-analyzer-security.insecureAPI.bcopy, clang-analyzer-security.insecureAPI.bzero, clang-analyzer-security.insecureAPI.getpw, clang-analyzer-security.insecureAPI.gets, clang-analyzer-security.insecureAPI.mkstemp, clang-analyzer-security.insecureAPI.mktemp, clang-analyzer-security.insecureAPI.rand, clang-analyzer-security.insecureAPI.strcpy, clang-analyzer-security.insecureAPI.vfork, clang-analyzer-unix.API, clang-analyzer-unix.Malloc, clang-analyzer-unix.MallocSizeof, clang-analyzer-unix.MismatchedDeallocator, clang-analyzer-unix.Vfork, clang-analyzer-unix.cstring.BadSizeArg, clang-analyzer-unix.cstring.NullArg, cppcoreguidelines-avoid-non-const-global-variables, cppcoreguidelines-avoid-goto, cppcoreguidelines-interfaces-global-init, cppcoreguidelines-macro-usage, cppcoreguidelines-narrowing-conversions, cppcoreguidelines-no-malloc, cppcoreguidelines-pro-type-const-cast, cppcoreguidelines-pro-type-member-init, cppcoreguidelines-pro-type-reinterpret-cast, cppcoreguidelines-pro-type-static-cast-downcast, cppcoreguidelines-pro-type-vararg, cppcoreguidelines-slicing, cppcoreguidelines-special-member-functions, fuchsia-statically-constructed-objects, google-default-arguments, google-explicit-constructor, google-runtime-int, google-runtime-operator, google-upgrade-googletest-case, hicpp-avoid-goto, hicpp-multiway-paths-covered, hicpp-signed-bitwise, llvm-header-guard, misc-definitions-in-headers, misc-misplaced-const, misc-new-delete-overloads, misc-non-copyable-objects, misc-no-recursion, misc-redundant-expression, misc-static-assert, misc-unconventional-assign-operator, misc-unused-alias-decls, misc-unused-parameters, misc-unused-using-decls, modernize-deprecated-headers, modernize-pass-by-value, modernize-raw-string-literal, modernize-redundant-void-arg, modernize-return-braced-init-list, modernize-unary-static-assert, modernize-use-bool-literals, modernize-use-default-member-init, modernize-use-equals-default, modernize-use-equals-delete, modernize-use-noexcept, modernize-use-nullptr, modernize-use-override, performance-implicit-conversion-in-loop, performance-move-const-arg, performance-move-constructor-init, performance-no-automatic-move, performance-noexcept-move-constructor, performance-trivially-destructible, performance-unnecessary-copy-initialization, performance-unnecessary-value-param, readability-it-bool-conversion, readability-avoid-const-params-in-decls, readability-const-return-type, readability-convert-member-functions-to-static, readability-deleted-default, readability-delete-null-pointer, readability-else-after-return, readability-function-size, readability-inconsistent-declaration-parameter-name, readability-isolate-declaration, readability-make-member-function-const, readability-misplaced-array-index, readability-named-parameter, readability-non-const-parameter, readability-qualified-auto, readability-redundant-access-specifiers, readability-redundant-control-flow, readability-redundant-declaration, readability-redundant-function-ptr-dereference, readability-redundant-member-init, readability-redundant-preprocessor, readability-simplify-boolean-expr, readability-simplify-subscript-expr, readability-static-accessed-through-instance, readability-static-definition-in-anonymous-namespace",
            "buildRoot": "${env.TWWorkspaceHome}/TWBuilds/TWInt/CoreProcessSample/Linux-ARM64-TWRelease",
            "installRoot": "${env.TWWorkspaceHome}/TWBuilds/TWInt/CoreProcessSample/Linux-ARM64-TWRelease/install",
            "cmakeExecutable": "/usr/bin/cmake",
            "remoteCopySourcesExclusionList": [ ".vs", ".git", "out" ],
            "remoteMachineName": "127.0.0.1",
            "remoteCMakeListsRoot": "$TWWorkspaceHomeDrive",
            "remoteBuildRoot": "$TWWorkspaceHome/TWBuilds/TWInt/CoreProcessSample/Linux-ARM64-TWRelease",
            "remoteInstallRoot": "$TWWorkspaceHome/TWBuilds/TWInt/CoreProcessSample/Linux-ARM64-TWRelease/install",
            "remoteCopySources": false,
            "rsyncCommandArgs": "-t --delete --delete-excluded",
            "remoteCopyBuildOutput": false,
            "remoteCopySourcesMethod": "rsync",
            "addressSanitizerRuntimeFlags": "detect_leaks=0",
            "remoteCopySourcesOutputVerbosity": "Normal",
            "remoteCopySourcesConcurrentCopies": "10",
            "remotePreGenerateCommand": "$TWWorkspaceHome/TallyWorldPMT/TallyWorld/TWPMT.VSSetup/Wizard/Remote/PreGenerate.sh",
            "remotePrebuildCommand": "$TWWorkspaceHome/TallyWorldPMT/TallyWorld/TWPMT.VSSetup/Wizard/Remote/Prebuild.sh",
            "remotePostbuildCommand": "$TWWorkspaceHome/TallyWorldPMT/TallyWorld/TWPMT.VSSetup/Wizard/Remote/Postbuild.sh"
        }
    ]
}